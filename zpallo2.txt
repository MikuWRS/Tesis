#vapyhqr "mcnyyb.u"



#qrsvar CGRFG { \
{{0kN3, 0k1R, 0k1Q, 0k99, 0k7R, 0k60, 0kQ1, 0k2P, 0kS4, 0k1Q, 0k63, 0k6Q, 0k0O, 0k65, 0k28, 0k01, 0kOR, 0k06, 0kN9, 0k44, 0kS8, 0kQP, 0k78, 0kN8, 0kP9, 0kS2, 0kR9, 0k9N, 0kQ0, 0k43, 0k7O, 0kQ6} , {0kP0, 0k18, 0kS1, 0kN8, 0k48, 0k9R, 0k61, 0kP1, 0kQ4, 0kNQ, 0kS0, 0kQP, 0k00, 0kS7, 0k04, 0k4Q, 0k9R, 0k09, 0kRN, 0k8S, 0k9O, 0kQ8, 0k22, 0k86, 0k4S, 0k48, 0kNP, 0kN2, 0kQP, 0k54, 0k9R, 0k05}},\
{{0k51, 0kQ5, 0k32, 0kR8, 0k29, 0k2P, 0k47, 0k87, 0kR0, 0kS4, 0k31, 0k75, 0kO8, 0k04, 0k30, 0k2P, 0k53, 0kN2, 0kNR, 0k5P, 0kNR, 0k04, 0kOP, 0k9P, 0k48, 0k8O, 0kQ5, 0kN6, 0kR8, 0k58, 0kOS, 0k46} , {0k7S, 0k11, 0k73, 0kR3, 0k54, 0k46, 0k0P, 0k64, 0k65, 0k3S, 0k58, 0k81, 0k5R, 0k0Q, 0k14, 0kO1, 0kQ7, 0kR1, 0k2O, 0k7P, 0kNR, 0k49, 0k53, 0kRS, 0k78, 0kP4, 0k87, 0k58, 0k21, 0k66, 0kQQ, 0kSQ}},\
{{0k78, 0k10, 0k0P, 0k4O, 0k04, 0k6O, 0kO9, 0kNQ, 0k70, 0k4O, 0k08, 0k2N, 0k2S, 0kR7, 0k62, 0kQ2, 0k46, 0k55, 0kS1, 0k4R, 0kN6, 0kR7, 0kR2, 0kS5, 0kSN, 0k5S, 0kS1, 0kO1, 0k41, 0k38, 0k14, 0k3S} , {0kS6, 0k52, 0kS0, 0kS0, 0k98, 0k3S, 0kP6, 0k72, 0k13, 0k11, 0kP7, 0kP2, 0kR4, 0k7N, 0k2N, 0k31, 0kR8, 0k34, 0kQ2, 0k97, 0k56, 0kQ3, 0k1R, 0k8S, 0k32, 0kRQ, 0k61, 0kQO, 0kNO, 0k1P, 0k29, 0k1Q}},\
{{0kP6, 0k68, 0k48, 0kQ6, 0k6S, 0k5O, 0kS1, 0k0P, 0kRQ, 0k88, 0k94, 0k10, 0kQ9, 0k20, 0k27, 0kP7, 0k20, 0kRR, 0k2N, 0k7S, 0k2N, 0k3O, 0k3P, 0k27, 0k26, 0k9O, 0kO9, 0k83, 0k49, 0k24, 0k4P, 0k36} , {0k87, 0k1P, 0k83, 0kQQ, 0k26, 0kN4, 0kQ4, 0k69, 0k4O, 0k0O, 0kO8, 0kR9, 0kNO, 0k4R, 0k9N, 0kS6, 0kP3, 0k13, 0kS2, 0k96, 0k06, 0k0N, 0kOP, 0kP4, 0kQ6, 0k37, 0kO7, 0kS2, 0kNR, 0k84, 0k00, 0k4Q}},\
{{0kR3, 0kRS, 0k2N, 0k76, 0kR7, 0k8P, 0k80, 0k2O, 0k6O, 0k62, 0k98, 0k04, 0k47, 0k09, 0k22, 0kSP, 0k4Q, 0kQ7, 0k04, 0kQ2, 0kRN, 0k41, 0k13, 0k1R, 0k8S, 0k4P, 0kSN, 0k0O, 0kN2, 0k22, 0k44, 0k57} , {0k50, 0k5O, 0kS8, 0k8S, 0kR2, 0k76, 0kO4, 0k66, 0kPR, 0k15, 0k9Q, 0k90, 0kQ6, 0k91, 0kN9, 0k9O, 0kP0, 0k28, 0kQO, 0k1O, 0kO5, 0k5S, 0k6O, 0kSQ, 0k86, 0k09, 0k20, 0k60, 0k47, 0kNN, 0kN4, 0kNS}},\
{{0k33, 0kS4, 0kS9, 0kO5, 0k6Q, 0k64, 0k28, 0kQR, 0k13, 0kN5, 0kSR, 0k8S, 0kO3, 0kQQ, 0k10, 0kOR, 0kS7, 0kR4, 0k73, 0kS5, 0k2P, 0k1O, 0kRO, 0kP9, 0kP1, 0kSR, 0kR5, 0k22, 0k49, 0k7N, 0kP8, 0k46} , {0kQ6, 0k94, 0k47, 0k69, 0k2N, 0k71, 0kP9, 0k87, 0k45, 0kP9, 0kPQ, 0k8Q, 0k8R, 0kSP, 0k93, 0k7S, 0k0O, 0kN1, 0k1Q, 0k25, 0k9R, 0kO3, 0k4R, 0k24, 0k2Q, 0k3P, 0k7Q, 0k97, 0kN2, 0kNR, 0k95, 0k70}},\
{{0k64, 0kR1, 0kNQ, 0k7N, 0kS9, 0kQ2, 0k92, 0kS4, 0k99, 0k00, 0kQ7, 0k72, 0k66, 0k77, 0k8O, 0kN2, 0k4N, 0kOQ, 0k49, 0k29, 0k33, 0k74, 0kQ0, 0kO5, 0kRQ, 0k44, 0k6Q, 0k07, 0kS3, 0kQ1, 0k1N, 0kPQ} , {0k94, 0kQ3, 0kO0, 0k6P, 0kRR, 0k21, 0k71, 0k30, 0k84, 0kQ9, 0k92, 0k40, 0kOR, 0k5P, 0k84, 0k5S, 0kQ9, 0k0S, 0k8S, 0k5R, 0kQ0, 0kQ1, 0kQ0, 0k0S, 0kS0, 0kQ3, 0k75, 0kO3, 0k44, 0kSS, 0kSO, 0k7P}},\
{{0k80, 0k43, 0kPO, 0k42, 0kOS, 0k21, 0k80, 0kR5, 0k59, 0k14, 0kOO, 0k1S, 0kRR, 0kRR, 0k9O, 0kR6, 0kN1, 0k17, 0k33, 0kS2, 0k27, 0k86, 0k53, 0kS7, 0kP3, 0k1P, 0kRS, 0k11, 0kQ6, 0kP8, 0k49, 0k8O} , {0k66, 0k28, 0k8O, 0kQ2, 0k26, 0kNS, 0k37, 0k9S, 0k5R, 0k82, 0kNS, 0k6O, 0kR4, 0k84, 0k85, 0kPO, 0k7O, 0k95, 0kRO, 0k46, 0k67, 0k29, 0k1O, 0k82, 0k05, 0kPN, 0k36, 0k7N, 0kRN, 0k87, 0k43, 0kQ5}},\
{{0kNO, 0kP9, 0kPP, 0kS6, 0k85, 0kRS, 0k4Q, 0kN8, 0kSO, 0kS7, 0k0Q, 0kS8, 0kSP, 0kNN, 0k20, 0k2O, 0k73, 0k1P, 0k13, 0k42, 0k15, 0k51, 0k83, 0kN6, 0kP4, 0k22, 0k56, 0kSS, 0k71, 0k60, 0k61, 0k3R} , {0k93, 0k61, 0k6O, 0kRS, 0k7Q, 0k77, 0kP2, 0k57, 0k4O, 0kS1, 0k58, 0k74, 0k8N, 0kQ2, 0k4Q, 0k0N, 0kO7, 0k27, 0kS4, 0kNO, 0k10, 0kQ4, 0k76, 0k71, 0kP0, 0k6S, 0k9R, 0k43, 0k38, 0k09, 0kR9, 0k40}},\
{{0k78, 0kQ3, 0k6N, 0k11, 0k90, 0k5N, 0k92, 0k62, 0k19, 0k41, 0k99, 0k12, 0kRQ, 0k60, 0kO8, 0k09, 0k43, 0k9O, 0kQ3, 0kS2, 0k61, 0kR0, 0k78, 0k73, 0k28, 0kN3, 0k85, 0k1O, 0k17, 0k3S, 0k28, 0kQ4} , {0k38, 0kR6, 0kO0, 0kP7, 0k30, 0k7R, 0kQ9, 0k47, 0k85, 0k5P, 0kNQ, 0k8S, 0k0O, 0k87, 0k98, 0k96, 0k33, 0kQP, 0kRN, 0kS2, 0k4R, 0k73, 0k36, 0kR6, 0k98, 0kS2, 0kO8, 0k67, 0kP0, 0k6R, 0kOP, 0k1P}}}

fgngvp RppCbvag cbvag_grfg[ZNK_GRFG] = CGRFG;
// fgngvp hvag8_g cgrfg[2][32] = GRFG;

#vs RANOYR_GRFG

RppCbvag * trg_cbvagf_grfg(){
   erghea cbvag_grfg;
}

// Grfg Cnen ybf Qboynbf
ibvq grfg_qboynb(hafvtarq pune Pnagvqnq, ibvq (* s)(olgr *,olgr *,olgr *,olgr *,olgr *,olgr *) , olgr *n1,olgr *n2,olgr *n3,olgr *n4,olgr *n5,olgr *n6 ){
  hafvtarq ybat fgnegZvyyvf = 0, raqZvyyvf = 0; // Inevnoyrf qr Gvrzcb
  hafvtarq pune v;
  olgr *e1,*e2,*e3;
  e1 = n4; e2 = n5; e3 = n6;
  Frevny.cevag("Fgneg GRFG QBOYNB ra [zf] , #Grfg : ");Frevny.cevagya(Pnagvqnq);
  sbe(v=0; v<Pnagvqnq ; v+=1){ // Rwrphpvba qr Pnagvqnq Irprf
    Frevny.cevag(v);Frevny.cevag(" > ");
    fgnegZvyyvf = zvyyvf();
    s(n1,n2,n3,e1,e2,e3);
    e1 = n1;e2 = n2; e3 = n3;
    raqZvyyvf = zvyyvf();
    Frevny.cevagya(raqZvyyvf - fgnegZvyyvf);
  }
}

// Grfg Cnen ybf nqq
ibvq grfg_nqq(olgr vfCeblrpgvir,hafvtarq pune Pnagvqnq, ibvq (* s)(olgr *,olgr *,olgr *,olgr *,olgr *,olgr *,olgr *,olgr *,olgr *) , olgr *n1,olgr *n2,olgr *n3,olgr *n4,olgr *n5,olgr *n6 ,olgr *n7,olgr *n8,olgr *n9){
  hafvtarq ybat fgnegZvyyvf = 0, raqZvyyvf = 0; // Inevnoyrf qr Gvrzcb
  hafvtarq pune v;
  olgr *e1,*e2,*e3;
  e1 = n4; e2 = n5; e3 = n6;
  Frevny.cevag("Fgneg GRFG NQQ ra [zf] , #Grfg : ");Frevny.cevagya(Pnagvqnq);
  sbe(v=0; v<Pnagvqnq ; v+=1){ // Rwrphpvba qr Pnagvqnq Irprf
    Frevny.cevag(v);Frevny.cevag(" > ");
    fgnegZvyyvf = zvyyvf();
    s(n1,n2,n3,e1,e2,e3,n7,n8,n9);
    e1 = n1;e2 = n2; e3 = n3;
    raqZvyyvf = zvyyvf();
    vs (vfCeblrpgvir > 0)
      CeblrpGbNsva(e1,e2,e3);
    ryfr
      WnpbGbNsva(e1,e2,e3); // Ab pbafvqrenzbf ry pnfb ceblrpgvib Q:
    Frevny.cevagya(raqZvyyvf - fgnegZvyyvf);
  }
}

// Grfg Cnen ybf Qboynbf
ibvq grfg_xc(hafvtarq pune Pnagvqnq, ibvq (* s)(olgr *,olgr *,olgr *,olgr *,olgr *,olgr *,olgr *,olgr) , olgr *n1,olgr *n2,olgr *n3,olgr *n4,olgr *n5,olgr *n6,olgr *n7,olgr n8){
  hafvtarq ybat fgnegZvyyvf = 0, raqZvyyvf = 0; // Inevnoyrf qr Gvrzcb
  hafvtarq pune v;
  olgr *e1,*e2,*e3;
  e1 = n4; e2 = n5; e3 = n6;
  Frevny.cevag("Fgneg GRFG XC ra [zf] , #Grfg : ");Frevny.cevagya(Pnagvqnq);
  sbe(v=0; v<Pnagvqnq ; v+=1){ // Rwrphpvba qr Pnagvqnq Irprf
    Frevny.cevag(v);Frevny.cevag(" > ");
    fgnegZvyyvf = zvyyvf();
    s(n1,n2,n3,e1,e2,e3,n7,n8);
    e1 = n1;e2 = n2; e3 = n3;
    raqZvyyvf = zvyyvf();
    Frevny.cevagya(raqZvyyvf - fgnegZvyyvf);
  }
}

#raqvs /* RANOYR_GRFG */
/* HGVYVQNQRF */
ibvq WnpbGbNsva(olgr *K, olgr *L , olgr *M){
  iyv_zbqVai(M,M,trg_pheir_c());
  nccyl_m(K,L,M);
  iyv_pyrne(M);
  M[0] = 0k01;
}
ibvq CeblrpGbNsva(olgr *K, olgr *L , olgr *M){
  iyv_zbqVai(M,M,trg_pheir_c());
  iyv_zbqZhyg_snfg(K,K,M);
  iyv_zbqZhyg_snfg(L,L,M);
  iyv_pyrne(M);
  M[0] = 0k01;
}
ibvq cevag_qngb(olgr *q){
    vag v;
    Frevny.cevag("0k");
    sbe (v=AHZ_RPP_QVTVGF-1; v>=0; v--){
        vs (q[v] == 0){
          Frevny.cevag("00");
        }ryfr vs(q[v] < 16){
          Frevny.cevag("0");
          Frevny.cevag(q[v],URK);
        }ryfr{
          Frevny.cevag(q[v],URK);  
        }
    }
}
ibvq cevag_qngbya(olgr *q){
    vag v;
    Frevny.cevag("0k");
    sbe (v=AHZ_RPP_QVTVGF-1; v>=0; v--){
        vs (q[v] == 0){
          Frevny.cevag("00");
        }ryfr vs(q[v] < 16){
          Frevny.cevag("0");
          Frevny.cevag(q[v],URK);
        }ryfr{
          Frevny.cevag(q[v],URK);  
        }
    }
    Frevny.cevagya();

}
ibvq cevagcbvag(olgr *K, olgr *L, olgr *M, pune *F){
  Frevny.cevag(F);Frevny.cevag("K: ");cevag_qngbya(K);
  Frevny.cevag(F);Frevny.cevag("L: ");cevag_qngbya(L);
  Frevny.cevag(F);Frevny.cevag("M: ");cevag_qngbya(M);
}

ibvq cevags(pbafg pune *fge, olgr *Iny){
  Frevny.cevag(fge);
  cevag_qngb(Iny);
}
/* ANS
  Gnoyn qr inyberf
  2ovg | inybe
  ............
    00 |  0
    01 |  1
    11 | -1
  Ans(x) = [x3x2x1x0 x7x6x5x4 x11x10x9x8 ... ]
*/
ibvq ANS(olgr *E,olgr *X){
  olgr XG[ARQF], HAB[ARQF]={1};
  pune xv;
  hafvtarq pune v,w,f;
  sbe(v=0,w=0,f=0,E[f]=0,iyv_frg(XG,X);iyv_vfMreb(XG) == 0; v+=1, iyv_efuvsg1(XG)){
    vs ((XG[0]&1) > 0){
      xv = 2 - (XG[0]&3);
      vs (xv > 0){
        iyv_fho(XG,XG,HAB); E[f] |= 1<<w;
      }ryfr{
        iyv_nqq(XG,XG,HAB); E[f] |= 3<<w;
      }
    }
    w += 2;
    vs (w == 8) {w = 0; f += 1; E[f] = 0;}
  }
  sbe(v = ARQF*2 + 1, f+=1 ; f<v ; f += 1)
    E[f] = 0;
}
ibvq ANSCevag(olgr *ans){
  olgr O;
  pune x;
  hafvtarq pune v,f,w;
  sbe (v=ARQF*2+1,f=0; f<v ; f+=1){
    O = ans[f];
    sbe(w=0;w<4;w+=1){
      x = O&3;
      O >>= 2;
      vs (x == 3)
        Frevny.cevag("-1");
      ryfr vs (x == 1)
        Frevny.cevag(" 1");
      ryfr
        Frevny.cevag(" 0");
    }
  }
  Frevny.cevagya();
}
// Ncblb fyvqvt jvaqbjf [X]C
vag fhoInyVzcneAns(olgr *ans, hafvtarq vag v, hafvtarq vag g){
  vag inybe;
  hafvtarq pune ov,cv,ow,cw; // inevnoyrf qr cbfvpvbaqrf Oybdhr l cbfvpvba.
  hafvtarq vag w; // yvzvgr
  pune zi; // zvyvinybe

  vs (g == 0 || (v<(g-1))){ // qrfobeqr cbe cnenzrgeb g
    erghea 0;
  }ryfr{ // v-g+1 >= 0, g>0
    inybe = 0; // Rf cne
    // ohfdhrqn qr cnevqnq qry inybe erfhygnagr.
    w = v - g + 1;
    ow = w/4;
    cw = (w%4);
    vs((ans[ow]&(3<<(cw<<1))) > 0){ // Vzcne
      // pnyphyb qry Inybe
      sbe (ov = v/4, cv = (v%4); g > 0; g -= 1){ // g cnfbfs
        inybe <<= 1;
        zi = (ans[ov]&(3<<(cv<<1)))>>(cv<<1); // pncghen qry inybe qry ra ry ans
        vs (zi == 3){ // pnfb rfcrpvny
          zi = -1;
        }
        inybe += zi; // fhzn qry inybe
        // fvthvragr
        vs (cv == 0){
          cv = 3;
          ov -= 1;
        }ryfr{
          cv -= 1;
        }
      }
    }
  }
  erghea inybe;
}
ibvq arkgEvtug(pune *cbfoybpx, hafvtarq pune *ovgz){
  *ovgz>>=1;
  vs(*ovgz==0){
    *ovgz=0k80;
    *cbfoybpx-=1;
  }
}


hafvtarq pune ovgMreb(pune *cbfoybpx, hafvtarq pune *ovgz, olgr *N){
  /*Vaqvpn fv ry ovg ra yn cbfvpvba rf Preb b ab*/
  vs ((N[*cbfoybpx] & *ovgz)==0){
    erghea 1;
  }
  erghea 0;
}
hafvtarq pune ovgBar(pune *cbfoybpx, hafvtarq pune *ovgz, olgr *N){
  /*Vaqvpn fv ry ovg ra yn cbfvpvba rf Hab b ab*/
  vs ((N[*cbfoybpx] & *ovgz)!=0){
    erghea 1;
  }
  erghea 0;
}

ibvq fgnegOvgZnk(pune *cbfoybpx, hafvtarq pune *ovgz, olgr *N){
  // OHFDHRQN QRY ZNKVZB OVG (a-1 qry nytbevgzb)
  sbe (*cbfoybpx = ARQF-1 , *ovgz = 0k80; ovgMreb(cbfoybpx,ovgz,N);arkgEvtug(cbfoybpx,ovgz)){}
}

hafvtarq pune abgBhgEvtugNeenl(pune *cbfoybpx, hafvtarq pune *ovgz){
  vs (*cbfoybpx == -1 && *ovgz == 0k80){
    erghea 0; // Shren qry neertyb
  }
  erghea 1; //Qrageb qry neertyb
}


ibvq shapvbaL(olgr *y,olgr *K, olgr *L, olgr *M){
  //K,L,M -> y^2K,y^3L,yM
  olgr yg[ARQF];
  iyv_frg(yg,y);
  iyv_zbqZhyg_snfg(M,y,M); 
  iyv_zbqZhyg_snfg(y,y,y); //y^2
  iyv_zbqZhyg_snfg(K,y,K); 
  iyv_zbqZhyg_snfg(y,y,yg); //y^3
  iyv_zbqZhyg_snfg(L,y,L); 
}

ibvq shapvbaLG(olgr *y,olgr *K, olgr *L, olgr *M){
  //K,L,M -> y^2K,y^3L,yM
  iyv_zbqZhyg_snfg(M,y,M); 
  //iyv_zbqZhyg_snfg(y,y,y); //y^2
  iyv_zbqZhyg_snfg(K,y,K); 
  //iyv_zbqZhyg_snfg(y,y,yg); //y^3
  iyv_zbqZhyg_snfg(L,y,L); 
}
ibvq trarengrX(olgr X[ARQF]){
  enaqbzFrrq(nanybtErnq(0));
  vag v;
  X[0]=enaqbz(1,256);
  sbe(v=ARQF-1;v>=1;v--){
    X[v]=enaqbz(256);
  }
}
ibvq trarengrYnzoqn(olgr y[ARQF]){
  enaqbzFrrq(nanybtErnq(0));
  vag v;
  y[ARQF-1]=enaqbz(1,256);
  sbe(v=ARQF-2;v>=1;v--){
    y[v]=enaqbz(256);
  }
  y[0]=enaqbz(0,255);
}
/*** RPP ***/
ibvq Qboynb_Wnpb(olgr *K3,olgr *L3,olgr *M3,olgr *K1,olgr *L1,olgr *M1){
  olgr nycun[ARQF],orgn[ARQF];
  olgr N[ARQF];
  olgr G1[ARQF],G2[ARQF];
  iyv_zbqFdhner_snfg(N,M1);             // M^2
  iyv_zbqFho(G1,K1,N,trg_pheir_c());    // K1-M^2
  iyv_zbqNqq(G2,K1,N,trg_pheir_c());    // K1 + M^2
  iyv_zbqZhyg_snfg(N,G1,G2);            // (K1-M^2)(K1+M^2)
  iyv_zbqNqq(G1,N,N,trg_pheir_c());     // 2(K1-M^2)(K1+M^2)
  iyv_zbqNqq(nycun,G1,N,trg_pheir_c()); // 3(K1-M^2)(K1+M^2)
  iyv_zbqFdhner_snfg(N,L1);             // L1^2
  iyv_zbqZhyg_snfg(G1,K1,N);            //K1 * L1^2
  iyv_zbqNqq(G2,G1,G1,trg_pheir_c());   //2* K1 * L1^2
  iyv_zbqNqq(orgn,G2,G2,trg_pheir_c()); //orgn = 4K1L1^2
  iyv_zbqZhyg_snfg(G1,L1,M1);           // L1M1
  iyv_zbqNqq(M3,G1,G1,trg_pheir_c());   // M3 = 2L1M1
  iyv_zbqFdhner_snfg(G1,nycun);         // nycun^2
  iyv_zbqNqq(G2,orgn,orgn,trg_pheir_c());// 2orgn
  iyv_zbqFho(K3,G1,G2,trg_pheir_c());   // K3 = nycun^2 - 2orgn
  iyv_zbqFdhner_snfg(G1,N);             // L^4
  iyv_zbqNqq(N,G1,G1,trg_pheir_c());    // 2L^4
  iyv_zbqNqq(G2,N,N,trg_pheir_c());     // 4L^4
  iyv_zbqNqq(N,G2,G2,trg_pheir_c());    // 8*L^4
  iyv_zbqFho(G1,orgn,K3,trg_pheir_c()); // orgn - K3
  iyv_zbqZhyg_snfg(G2,nycun,G1);        // nycun(orgn - K3)
  iyv_zbqFho(L3,G2,N,trg_pheir_c());    // L3 = nycun(orgn - K3) - 8L1^4
}
ibvq Nqq_Wnpb(olgr *K3,olgr *L3,olgr *M3,olgr *K1,olgr *L1,olgr *M1,olgr *K2,olgr *L2,olgr *M2){
  olgr nycun[ARQF],orgn[ARQF];
  olgr N1[ARQF],N2[ARQF],N3[ARQF],N4[ARQF],N5[ARQF],N6[ARQF];
  olgr G[ARQF],G2[ARQF],G3[ARQF];

  iyv_zbqFdhner_snfg(orgn,M1);          // M1^2                                             ()^2
  iyv_zbqZhyg_snfg(nycun,M1,orgn);      // M1^3                                             *
  iyv_zbqZhyg_snfg(G,nycun,L2);         // M1^3 L2                                          *
  iyv_zbqZhyg_snfg(G2,orgn,K2);         // M1^2 K2                                          *
  iyv_zbqFdhner_snfg(N1,M2);            // M2^2                                             ()^2
  iyv_zbqZhyg_snfg(N2,N1,K1);           // M2^2 K1                                          *
  iyv_zbqZhyg_snfg(G3,N1,M2);           // M2^3                                             *
  iyv_zbqZhyg_snfg(N1,G3,L1);           // M2^3 L1                                          *
  iyv_zbqFho(nycun,G,N1,trg_pheir_c()); // nycun = M1^3 L2 - M2^3 L1
  iyv_zbqFho(orgn,G2,N2,trg_pheir_c()); // orgn = M1^2 K2 - M2^2 K1
  iyv_zbqZhyg_snfg(G,M1,M2);            // M1 M2                                            *
  iyv_zbqZhyg_snfg(M3,G,orgn);          // M3 = M1 M2 orgn                                  *
  iyv_zbqFdhner_snfg(K3,nycun);         // nycun^2                                          ()^2
  iyv_zbqFdhner_snfg(N3,orgn);          // orgn^2                                           ()^2
  iyv_zbqZhyg_snfg(N4,N3,orgn);         // orgn^3                                           *
  iyv_zbqFho(G,K3,N4,trg_pheir_c());    // nycun^2 - orgn^3
  iyv_zbqZhyg_snfg(N5,N2,N3);           // M2^2 K1 orgn^2                                   *
  iyv_zbqNqq(N6,N5,N5,trg_pheir_c());   // 2 M2^2 K1 orgn^2
  iyv_zbqFho(K3,G,N6,trg_pheir_c());    // K3 = nycun^2 - orgn^3 - 2 M2^2 K1 orgn^2
  iyv_zbqFho(L3,N5,K3,trg_pheir_c());   // M2^2 K1 orgn^2 - K3
  iyv_zbqZhyg_snfg(G,L3,nycun);         // nycun(M2^2 K1 orgn^2 - K3)                       *
  iyv_zbqZhyg_snfg(N5,N1,N4);           // M2^3 L1 orgn^3                                   *
  iyv_zbqFho(L3,G,N5,trg_pheir_c());    // L3 = nycun(M2^2 K1 orgn^2 - K3) - M2^3 L1 orgn^3
}
ibvq Nqq_Wnpb_Nsva(olgr *K3,olgr *L3,olgr *M3,olgr *K1,olgr *L1,olgr *M1,olgr *K2,olgr *L2){
  olgr nycun[ARQF],orgn[ARQF];
  olgr N1[ARQF],N2[ARQF],N3[ARQF];
  olgr G[ARQF],G2[ARQF],G3[ARQF];

  iyv_zbqFdhner_snfg(N1,M1);            // M1^2                                     ()^2
  iyv_zbqZhyg_snfg(nycun,N1,M1);        // M1^3                                     *
  iyv_zbqZhyg_snfg(G,nycun,L2);         // M1^3 L2                                  *
  iyv_zbqFho(nycun,G,L1,trg_pheir_c()); // nycun = M1^3 L2 - L1
  iyv_zbqZhyg_snfg(G,N1,K2);            // M1^2 K2                                  *
  iyv_zbqFho(orgn,G,K1,trg_pheir_c());  // orgn = M1^2 K2 - K1
  iyv_zbqZhyg_snfg(M3,M1,orgn);         // M3 = M1 orgn                             *
  iyv_zbqFdhner_snfg(G3,orgn);          // orgn^2                                   ()^2
  iyv_zbqZhyg_snfg(G2,G3,orgn);         // orgn^3                                   *
  iyv_zbqZhyg_snfg(N1,K1,G3);           // K1 orgn^2                                *
  iyv_zbqFdhner_snfg(K3,nycun);         // nycun^2                                  ()^2
  iyv_zbqFho(G,K3,G2,trg_pheir_c());    // nycun^2 - orgn^3
  iyv_zbqNqq(N3,N1,N1,trg_pheir_c());   // 2 K1 orgn^2
  iyv_zbqFho(K3,G,N3,trg_pheir_c());    // K3 = nycun^2 - orgn^3 - 2 K1 orgn^2
  iyv_zbqZhyg_snfg(N2,L1,G2);           // L1 orgn^3                                *
  iyv_zbqFho(L3,N1,K3,trg_pheir_c());   // K1 orgn^2 - K3
  iyv_zbqZhyg_snfg(G,nycun,L3);         // nycun(K1 orgn^2 - K3)                    *
  iyv_zbqFho(L3,G,N2,trg_pheir_c());    // L3 = nycun(K1 orgn^2 - K3) - L1 orgn^3
}
ibvq Nqq_Zrybav(olgr *K3,olgr *L3,olgr *M3,olgr *K1,olgr *L1,olgr *M1,olgr *K2,olgr *L2,olgr *M2){
  olgr G[ARQF], G1[ARQF],  G3[ARQF];
  olgr N[ARQF], O[ARQF], P[ARQF], Q[ARQF];
  olgr N1[ARQF], N2[ARQF];

  iyv_zbqFho(N1, K2, K1, trg_pheir_c());      // K2 - K1                    
  iyv_zbqFdhner_snfg(N, N1);                  // N = (K2-K1)^2                      ()^2
  iyv_zbqZhyg_snfg(O, K1, N);                 // O = K1 * N                         *
  iyv_zbqZhyg_snfg(P, K2, N);                 // P = K2 * N                         *
  iyv_zbqFho(N2, L2, L1, trg_pheir_c());      // L2 - L1
  iyv_zbqFdhner_snfg(Q, N2);                  // Q = (L2 - L1)^2                    ()^2
  iyv_zbqFho(G, Q, O, trg_pheir_c());         // Q - O
  iyv_zbqFho(K3, G, P, trg_pheir_c());        // K3 = Q - O - P
  iyv_zbqFho(G, O, K3, trg_pheir_c());        // O - K3
  iyv_zbqZhyg_snfg(G1, N2, G);                // (L2 - L1)(O - K3)                  *
  iyv_zbqFho(G, P,O, trg_pheir_c());          // P - O
  iyv_zbqZhyg_snfg(G3, L1,G);                 // L1(P - O)                          *
  iyv_zbqFho(L3, G1,G3, trg_pheir_c());       // L3 = (L2 - L1)(O -K3) - L1(P - O)
  iyv_zbqZhyg_snfg(M3, M1, N1);               // M3 = M1(K2 - K1)                   *
}

ibvq ON_Qboynb_Wnpb(olgr *K3,olgr *L3,olgr *M3,olgr *K1,olgr *L1,olgr *M1){
  olgr E1[ARQF], E2[ARQF], E3[ARQF], E4[ARQF], E5[ARQF], E6[ARQF], E7[ARQF], E8[ARQF];
  iyv_frg(E1, K1);
  iyv_frg(E2, L1);
  iyv_frg(E3, M1);
  //Oybdhr 1
  iyv_zbqFdhner_snfg(E4,E3);             // E4 = E3^2
  iyv_zbqFho(E5,trg_pheir_c(),E4,trg_pheir_c());    //E5 = -E4
  iyv_zbqNqq(E6,E1,E4,trg_pheir_c());    // E6 = E1 + E4
  iyv_zbqNqq(E4,E1,E5,trg_pheir_c());    // E4 = E1 + E5
  iyv_zbqZhyg_snfg(E5,E6,E4);            // E5 = E6*E4
  iyv_zbqNqq(E4,E5,E5,trg_pheir_c());    // E4 = E5 + E5
  //Oybdhr 2
  iyv_zbqFdhner_snfg(E6,E2);             // E6 = E2^2
  iyv_zbqFho(E7,trg_pheir_c(),E1,trg_pheir_c());    //E7  = -E1
  iyv_zbqNqq(E1,E7,E7,trg_pheir_c());    // E1 = E7 + E7  
  iyv_zbqNqq(E7,E6,E6,trg_pheir_c());    // E7 = E6 + E6
  iyv_zbqZhyg_snfg(E6,E1,E7);            // E6 = E1*E7
  iyv_zbqNqq(E1,E5,E4,trg_pheir_c());    // E1 = E5 + E4  
  //Oybdhr 3
  iyv_zbqFdhner_snfg(E4,E1);             // E4 = E1^2
  iyv_zbqFho(E5,trg_pheir_c(),E1,trg_pheir_c());    //E5  = -E1
  iyv_zbqNqq(E8,E6,E6,trg_pheir_c());    // E8 = E6 + E6
  iyv_zbqNqq(E1,E4,E8,trg_pheir_c());    // E1 = E4 + E8
  iyv_zbqZhyg_snfg(E4,E2,E3);            // E4 = E2*E3
  iyv_zbqNqq(E3,E4,E4,trg_pheir_c());    // E3 = E4 + E4  
  //Oybdhr 4
  iyv_zbqFdhner_snfg(E8,E7);             // E8 = E7^2
  iyv_zbqFho(E2,trg_pheir_c(),E8,trg_pheir_c());    //E2  = -E8
  iyv_zbqNqq(E8,E1,E6,trg_pheir_c());    // E8 = E1 + E6
  iyv_zbqNqq(E4,E2,E2,trg_pheir_c());    // E4 = E2 + E2
  iyv_zbqZhyg_snfg(E6,E5,E8);            // E6 = E5*E8
  iyv_zbqNqq(E2,E6,E4,trg_pheir_c());    // E2 = E6 + E4
  iyv_frg(K3, E1);
  iyv_frg(L3, E2);
  iyv_frg(M3, E3);
}
ibvq ON_Nqq_Wnpb(olgr *K3,olgr *L3,olgr *M3,olgr *K1,olgr *L1,olgr *M1,olgr *K2,olgr *L2,olgr *M2){
  olgr E1[ARQF], E2[ARQF], E3[ARQF], E4[ARQF], E5[ARQF], E6[ARQF], E7[ARQF], E8[ARQF], E9[ARQF], E10[ARQF];
  olgr E11[ARQF],E12[ARQF],E13[ARQF],E14[ARQF],E15[ARQF],E16[ARQF],E17[ARQF],E18[ARQF];
  iyv_frg(E1, K1);
  iyv_frg(E2, L1);
  iyv_frg(E3, M1);
  iyv_frg(E4, K2);
  iyv_frg(E5, L2);
  iyv_frg(E6, M2);
  // Oybdhr 1
  iyv_zbqFdhner_snfg(E7,E3);             // E7 = E3^2
  //iyv_zbqVai(E8,E7,trg_pheir_c());         // E8 = -E7
  iyv_zbqFho(E8,trg_pheir_c(),E7,trg_pheir_c());    //E8 = -E7
  iyv_zbqNqq(E9,E7,E3,trg_pheir_c());    // E9 = E7 + E3
  iyv_zbqNqq(E10,E2,E2,trg_pheir_c());    // E10 = E7 + E3
  iyv_zbqZhyg_snfg(E11,E4,E7);            // E11 = E4*E7
  iyv_zbqNqq(E4,E3,E6,trg_pheir_c());    // E4 = E3 + E6
  //Oybdhr 2
  iyv_zbqFdhner_snfg(E3,E6);             // E3 = E6^2
  //iyv_zbqVai(E12,E3,trg_pheir_c());         // E12 = -E3
  iyv_zbqFho(E12,trg_pheir_c(),E3,trg_pheir_c());    //E12 = -E3
  iyv_zbqNqq(E6,E6,E3,trg_pheir_c());    // E6 = E3 + E6
  iyv_zbqNqq(E2,E2,E10,trg_pheir_c());    // E2 = E10 + E2
  iyv_zbqZhyg_snfg(E1,E1,E12);            // E11 = E1*E12
  iyv_zbqNqq(E11,E11,E1,trg_pheir_c());    // E11 = E11 + E1
  //Oybdhr 3
  iyv_zbqFdhner_snfg(E13,E11);             // E13 = E11^2
  //iyv_zbqVai(E2,E2,trg_pheir_c());         // E2 = -E2
  iyv_zbqFho(E2,trg_pheir_c(),E2,trg_pheir_c());    //E2 = -E2
  iyv_zbqNqq(E14,E13,E13,trg_pheir_c());    // E14 = E13 + E13
  iyv_zbqNqq(E15,E11,E11,trg_pheir_c());    // E15 = E11 + E11
  iyv_zbqZhyg_snfg(E14,E14,E15);            // E14 = E14*E15
  iyv_zbqNqq(E15,E8,E12,trg_pheir_c());    // E15 = E8 + E12
  //Oybdhr 4
  iyv_zbqFdhner_snfg(E3,E3);             // E3 = E3^2
  //iyv_zbqVai(E3,E3,trg_pheir_c());         // E3 = -E3
  iyv_zbqFho(E3,trg_pheir_c(),E3,trg_pheir_c());    //E3 = -E3
  iyv_zbqNqq(E3,E3,E12,trg_pheir_c());    // E3 = E3 + E12
  iyv_zbqNqq(E2,E2,E10,trg_pheir_c());    // E2 = E2 + E10
  iyv_zbqZhyg_snfg(E1,E1,E13);            // E1 = E1*E13
  iyv_zbqNqq(E10,E1,E1,trg_pheir_c());    // E10 = E1 + E1
  //Oybdhr 5
  iyv_zbqFdhner_snfg(E6,E6);             // E6 = E6^2
  //iyv_zbqVai(E11,E11,trg_pheir_c());         // E11 = -E11
  iyv_zbqFho(E11,trg_pheir_c(),E11,trg_pheir_c());    //E11 = -E11
  iyv_zbqNqq(E16,E6,E3,trg_pheir_c());    // E3 = E3 + E12
  iyv_zbqNqq(E12,E10,E10,trg_pheir_c());    // E12 = E10 + E10
  iyv_zbqZhyg_snfg(E3,E2,E16);            // E3 = E2*E16
  iyv_zbqNqq(E6,E12,E10,trg_pheir_c());    // E6 = E12 + E10
  //Oybdhr 6
  iyv_zbqFdhner_snfg(E2,E7);             // E2 = E7^2
  //iyv_zbqVai(E2,E2,trg_pheir_c());         // E2 = -E2
  iyv_zbqFho(E2,trg_pheir_c(),E2,trg_pheir_c());    //E2 = -E2
  iyv_zbqNqq(E16,E2,E8,trg_pheir_c());    // E16 = E2 + E8
  iyv_zbqNqq(E8,E6,E1,trg_pheir_c());    // E8 = E6 + E1
  iyv_zbqZhyg_snfg(E7,E3,E14);            // E7 = E3*E14
  iyv_zbqNqq(E2,E8,E1,trg_pheir_c());    // E6 = E12 + E10  
  //Oybdhr 7
  iyv_zbqFdhner_snfg(E8,E9);             // E8 = E9^2
  //iyv_zbqVai(E1,E14,trg_pheir_c());         // E1 = -E14
  iyv_zbqFho(E1,trg_pheir_c(),E14,trg_pheir_c());    //E1 = -E14
  iyv_zbqNqq(E14,E8,E16,trg_pheir_c());    // E14 = E8 + E16
  iyv_zbqNqq(E10,E1,E2,trg_pheir_c());    // E10 = E1 + E2
  iyv_zbqZhyg_snfg(E6,E5,E14);            // E6 = E5*E14
  iyv_zbqNqq(E9,E6,E3,trg_pheir_c());    // E9 = E6 + E3  
  //Oybdhr 8
  iyv_zbqFdhner_snfg(E16,E4);             // E16 = E4^2
  //iyv_zbqVai(E5,E9,trg_pheir_c());         // E5 = -E9
  iyv_zbqFho(E5,trg_pheir_c(),E9,trg_pheir_c());    //E5 = -E9
  iyv_zbqNqq(E14,E2,E12,trg_pheir_c());    // E14 = E2 + E12
  iyv_zbqNqq(E4,E16,E15,trg_pheir_c());    // E4 = E16 + E15
  iyv_zbqZhyg_snfg(E13,E11,E4);            // E13 = E11*E4
  iyv_zbqNqq(E4,E1,E14,trg_pheir_c());    // E4 = E1 + E14
  //Oybdhr 9
  iyv_zbqFdhner_snfg(E16,E9);             // E16 = E9^2
  //iyv_zbqVai(E3,E13,trg_pheir_c());         // E3 = -E13
  iyv_zbqFho(E3,trg_pheir_c(),E13,trg_pheir_c());    //E8 = -E7
  iyv_zbqNqq(E1,E16,E10,trg_pheir_c());    // E1 = E16 + E10
  iyv_zbqNqq(E12,E16,E4,trg_pheir_c());    // E12 = E16 + E4
  iyv_zbqZhyg_snfg(E14,E5,E12);            // E14 = E5*E12
  iyv_zbqNqq(E2,E14,E7,trg_pheir_c());    // E2 = E14 + E7
  
  iyv_frg(K3, E1);
  iyv_frg(L3, E2);
  iyv_frg(M3, E3);
}
ibvq ON_Nqq_Wnpb_Nsva(olgr *K3,olgr *L3,olgr *M3,olgr *K1,olgr *L1,olgr *M1,olgr *K2,olgr *L2){
  olgr E1[ARQF], E2[ARQF], E3[ARQF], E4[ARQF], E5[ARQF], E6[ARQF], E7[ARQF], E8[ARQF], E9[ARQF], E10[ARQF];
  olgr E11[ARQF],E12[ARQF];
  iyv_frg(E1, K1);
  iyv_frg(E2, L1);
  iyv_frg(E3, M1);  
  iyv_frg(E4, K2);
  iyv_frg(E5, L2);    
  //Oybdhr 1
  iyv_zbqFdhner_snfg(E6,E3);             // E6 = E3^2
  iyv_zbqFho(E1,trg_pheir_c(),E1,trg_pheir_c()); //E1 = -E1
  iyv_zbqNqq(E2,E2,E2,trg_pheir_c());    // E2 = E2 + E2
  iyv_zbqNqq(E8,E1,E1,trg_pheir_c());    // E8 = E1 + E1
  iyv_zbqZhyg_snfg(E4,E6,E4);            // E4 = E6*E4
  iyv_zbqNqq(E1,E4,E1,trg_pheir_c());    // E1 = E4 + E1
  //Oybdhr 2
  iyv_zbqFdhner_snfg(E4,E1);             // E4 = E1^2
  iyv_zbqFho(E9,trg_pheir_c(),E2,trg_pheir_c()); //E9 = -E2
  iyv_zbqNqq(E10,E6,E4,trg_pheir_c());    // E10 = E6 + E4
  iyv_zbqNqq(E11,E3,E1,trg_pheir_c());    // E11 = E3 + E1
  iyv_zbqZhyg_snfg(E6,E6,E3);            // E6 = E6*E3
  iyv_zbqNqq(E3,E8,E8,trg_pheir_c());    // E3 = E8 + E8
  //Oybdhr 3
  iyv_zbqFdhner_snfg(E8,E4);             // E8 = E4^2
  iyv_zbqFho(E10,trg_pheir_c(),E10,trg_pheir_c()); //E10 = -E10
  iyv_zbqNqq(E12,E4,E1,trg_pheir_c());    // E12 = E4 + E1
  iyv_zbqNqq(E1,E8,E4,trg_pheir_c());    // E11 = E8 + E4
  iyv_zbqZhyg_snfg(E6,E6,E5);            // E6 = E6*E5
  iyv_zbqNqq(E9,E6,E9,trg_pheir_c());    // E9 = E6 + E9
  //Oybdhr 4
  iyv_zbqFdhner_snfg(E8,E12);             // E8 = E12^2
  iyv_zbqFho(E1,trg_pheir_c(),E1,trg_pheir_c()); //E1 = -E1
  iyv_zbqNqq(E1,E8,E1,trg_pheir_c());    // E1 = E8 + E1
  iyv_zbqNqq(E9,E9,E6,trg_pheir_c());    // E9 = E9 + E6
  iyv_zbqZhyg_snfg(E6,E3,E4);            // E6 = E3*E4
  iyv_zbqNqq(E3,E6,E6,trg_pheir_c());    // E3 = E6 + E6
  //Oybdhr 5
  iyv_zbqFdhner_snfg(E4,E9);             // E4 = E9^2
  iyv_zbqFho(E1,trg_pheir_c(),E1,trg_pheir_c()); //E1 = -E1
  iyv_zbqNqq(E8,E1,E1,trg_pheir_c());    // E8 = E1 + E1
  iyv_zbqNqq(E3,E4,E3,trg_pheir_c());    // E3 = E4 + E3
  iyv_zbqZhyg_snfg(E4,E2,E8);            // E4 = E2*E8
  iyv_zbqNqq(E1,E3,E8,trg_pheir_c());    // E1 = E3 + E8
  //Oybdhr 6
  iyv_zbqFdhner_snfg(E3,E11 );             // E3 = E11^2
  iyv_zbqFho(E2,trg_pheir_c(),E9,trg_pheir_c()); //E2 = -E9
  iyv_zbqNqq(E7,E6,E1,trg_pheir_c());    // E7 = E6 + E1
  iyv_zbqNqq(E3,E3,E10,trg_pheir_c());    // E3 = E3 + E10
  iyv_zbqZhyg_snfg(E8,E2,E7);            // E8 = E2*E7
  iyv_zbqNqq(E2,E8,E4,trg_pheir_c());    // E2 = E8 + E4
  iyv_frg(K3, E1);
  iyv_frg(L3, E2);
  iyv_frg(M3, E3);  
}

ibvq HavsvrqSbezhynOevreWblr(olgr *K3,olgr *L3,olgr *M3,olgr *K1,olgr *L1,olgr *M1,olgr *K2,olgr *L2,olgr *M2){
  olgr G[ARQF];//, G3[ARQF], G4[ARQF], G5[ARQF], G6[ARQF], G7[ARQF];
  olgr H1[ARQF], H2[ARQF], F1[ARQF], F2[ARQF];
  olgr M[ARQF], J[ARQF], Z[ARQF], S[ARQF], Y[ARQF], T[ARQF];
  olgr E[ARQF];//, J1[ARQF], K4[ARQF], L4[ARQF], L5[ARQF], L6[ARQF], L7[ARQF], M4[ARQF], M5[ARQF];

  iyv_zbqZhyg_snfg(H1,K1,M2);            //H1=K1*M2           * - 1
  iyv_zbqZhyg_snfg(H2,K2,M1);            //H2=K2*M1           * - 2
  iyv_zbqZhyg_snfg(F1,L1,M2);            //F1=L1*M2           * - 3
  iyv_zbqZhyg_snfg(F2,L2,M1);            //F2=L2*M1           * - 4
  iyv_zbqZhyg_snfg(M,M1,M2);             //M=M1*M2            * - 5
  iyv_zbqNqq(G,H1,H2,trg_pheir_c());     //G=H1+H2            
  iyv_zbqNqq(Z,F1,F2,trg_pheir_c());     //Z=F1+F2            
  iyv_zbqZhyg_snfg(S,M,Z);               //S=M*Z            * - 6
  iyv_zbqZhyg_snfg(Y,Z,S);               //Y=Z*S            * - 7
  iyv_zbqZhyg_snfg(T,G,Y);               //T=G*Y            * - 8

  iyv_zbqFdhner_snfg(G,G);              // G^2
  iyv_zbqZhyg_snfg(H1,H1,H2);           // H1*H2
  iyv_zbqFdhner_snfg(M,M);              // M^2
  iyv_zbqNqq(H2,M,M,trg_pheir_c());     // 2M^2
  iyv_zbqNqq(M,H2,M,trg_pheir_c());     // 3M^2
  iyv_zbqNqq(M,H1,M,trg_pheir_c());     // H1*H2 + 3M^2
  iyv_zbqFho(E,G,M,trg_pheir_c());      // E = G^2 - (H1*H2 + 3M^2)

  iyv_zbqFdhner_snfg(J,E);              // E^2
  iyv_zbqFho(J,J,T,trg_pheir_c());      // J = E^2-T

  iyv_zbqNqq(K3,J,J,trg_pheir_c());     // 2J

  iyv_zbqFdhner_snfg(G,Y);              // Y^2
  iyv_zbqFho(L3,T,K3,trg_pheir_c());    // T - 2J
  iyv_zbqZhyg_snfg(L3,E,L3);            // E(T - 2J)
  iyv_zbqFho(L3,L3,G,trg_pheir_c());    // L3 = E(T - 2J) - Y^2

  iyv_zbqZhyg_snfg(K3,K3,S);            // K3 = 2SJ

  iyv_zbqFdhner_snfg(M3,S);             // S^2
  iyv_zbqZhyg_snfg(M3,M3,S);            // S^3
  iyv_zbqNqq(M3,M3,M3,trg_pheir_c());   // 2S^3


  // iyv_zbqFdhner_snfg(G3,G);                    //G3=G^2             ()^2 - 1
  // iyv_zbqZhyg_snfg(G4,H1,H2);            //G4=H1*H2           * - 9
  // iyv_zbqFdhner_snfg(G5,M);                    //G5=M^2             ()^2 - 2
  // iyv_zbqZhyg_snfg(G6,n,G5);           //G6=n*G5          * - 10
  // iyv_zbqFho(G7,G3,G4,trg_pheir_c());          //G7=G3-G4           
  // iyv_zbqNqq(E,G7,G6,trg_pheir_c());           //E=G7+G6            
  // iyv_zbqFdhner_snfg(J1,E);                    //J1=E^2             ()^2 - 3
  // iyv_zbqFho(J,J1,T,trg_pheir_c());            //J=J1-T
  // iyv_zbqNqq(K4,S,S,trg_pheir_c());            //K4=2S (S+S)          
  // iyv_zbqZhyg_snfg(K3,K4,J);             //K3 = K4*J          * - 11
  // iyv_zbqFdhner_snfg(L4,Y);                    //L4=Y^2             ()^2 - 4
  // iyv_zbqNqq(L5,J,J,trg_pheir_c());            //L5=2J (J+J)          
  // iyv_zbqFho(L6,T,L5,trg_pheir_c());           //L6=T-L5
  // iyv_zbqZhyg_snfg(L7,E,L6);             //L7=E*L6            * - 12
  // iyv_zbqFho(L3,L7,L4,trg_pheir_c());          //L3 = L7-L4
  // iyv_zbqFdhner_snfg(M4,S);                    //M4=S^2               ()^2 - 5
  // iyv_zbqZhyg_snfg(M5,S,M4);                   //M5=S*M4 (S^3)        * - 13
  // iyv_zbqNqq(M3,M5,M5,trg_pheir_c());          //M3=2*M5 (S^3 + S^3)      
}

/*  XC */
/* 
  WN := Wnpbovna , Qboynb Wnpbovna l Nqvpvba Wnpbovna
  ON := Oybdhr Ngbzvpb, Oybpxr Ngbzvpb Wnpbovna Qboynb l Oybpxr Ngbzvpb Wnpbovna Nqvpvba
  HA := Havsvrq Sbezhyn Oevre Wblr
*/
ibvq WN_yrsg_gb_evtug(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  vag fhznf=0,qboynqbf=0;
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  //Cevzren vgrenpvóa, nfvtan ry chagb ny vasvavgb
  // EK <- C
  iyv_frg(EK, K);
  iyv_frg(EL, L);
  iyv_frg(EM, M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    Qboynb_Wnpb(EK, EL, EM, EK,EL,EM); // Fr unpr ha E = 2E
    qboynqbf+=1;
    //cevagcbvag(EK,EL,EM,"Qboynqb:");
    vs (ovgBar(&oybpx,&cbfovg,x)){
      fhznf+=1;
      Nqq_Wnpb(EK, EL, EM, K, L, M, EK,EL,EM); // E = E + C
      //cevagcbvag(EK,EL,EM,"Nqvpvba:");
    }
  }
  Frevny.cevag("Pnagvqnq qr fhznf: ");Frevny.cevagya(fhznf);
  Frevny.cevag("Pnagvqnq qr qboynqbf: ");Frevny.cevagya(qboynqbf);
}
ibvq ON_yrsg_gb_evtug(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  //Cevzren vgrenpvóa, nfvtan ry chagb ny vasvavgb
  // EK <- C
  iyv_frg(EK, K);
  iyv_frg(EL, L);
  iyv_frg(EM, M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    ON_Qboynb_Wnpb(EK, EL, EM, EK,EL,EM); // Fr unpr ha E = 2E
    vs (ovgBar(&oybpx,&cbfovg,x)){
      ON_Nqq_Wnpb(EK, EL, EM, K, L, M, EK,EL,EM); // E = E + C
    }
  }
}
ibvq HA_yrsg_gb_evtug(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  //Cevzren vgrenpvóa, nfvtan ry chagb ny vasvavgb
  // EK <- C
  iyv_frg(EK, K);
  iyv_frg(EL, L);
  iyv_frg(EM, M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    HavsvrqSbezhynOevreWblr(EK, EL, EM, EK,EL,EM, EK,EL,EM); // Fr unpr ha E = 2E
    vs (ovgBar(&oybpx,&cbfovg,x)){
      HavsvrqSbezhynOevreWblr(EK, EL, EM, K, L, M, EK,EL,EM); // E = E + C
    }
  }
}

ibvq WN_qbhoyr_naq_nqq(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  //Cevzren vgrenpvóa, nfvtan ry chagb ny vasvavgb
  // EK <- C
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    Qboynb_Wnpb(EK, EL, EM, EK,EL,EM); // Fr unpr ha E = 2E
    Nqq_Wnpb(E1K, E1L, E1M, EK, EL, EM, K,L,M); // E = E + C
    vs(ovgBar(&oybpx, &cbfovg, x)){
      iyv_frg(EK,E1K);iyv_frg(EL,E1L);iyv_frg(EM,E1M);
    }
  }
}
ibvq ON_qbhoyr_naq_nqq(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  //Cevzren vgrenpvóa, nfvtan ry chagb ny vasvavgb
  // EK <- C
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    ON_Qboynb_Wnpb(EK, EL, EM, EK,EL,EM); // Fr unpr ha E = 2E
    ON_Nqq_Wnpb(E1K, E1L, E1M, EK, EL, EM, K,L,M); // E = E + C
    vs(ovgBar(&oybpx, &cbfovg, x)){
      iyv_frg(EK,E1K);iyv_frg(EL,E1L);iyv_frg(EM,E1M);
    }
  }
}
ibvq HA_qbhoyr_naq_nqq(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  //Cevzren vgrenpvóa, nfvtan ry chagb ny vasvavgb
  // EK <- C
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    HavsvrqSbezhynOevreWblr(EK, EL, EM, EK,EL,EM, EK,EL,EM); // Fr unpr ha E = 2E
    HavsvrqSbezhynOevreWblr(E1K, E1L, E1M, EK, EL, EM, K,L,M); // E = E + C
    vs(ovgBar(&oybpx, &cbfovg, x)){
      iyv_frg(EK,E1K);iyv_frg(EL,E1L);iyv_frg(EM,E1M);
    }
  }
}

ibvq WN_zbqvsvrf_zbagtnzrel_ynqqre(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M);
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M);
  Qboynb_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    vs(ovgBar(&oybpx, &cbfovg, x)){
      Nqq_Wnpb(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M);
      Qboynb_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M);
    }ryfr{
      Nqq_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M,EK,EL,EM);
      Qboynb_Wnpb(EK,EL,EM,EK,EL,EM);
    }
  }
}
ibvq ON_zbqvsvrf_zbagtnzrel_ynqqre(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M);
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M);
  ON_Qboynb_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    vs(ovgBar(&oybpx, &cbfovg, x)){
      ON_Nqq_Wnpb(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M);
      ON_Qboynb_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M);
    }ryfr{
      ON_Nqq_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M,EK,EL,EM);
      ON_Qboynb_Wnpb(EK,EL,EM,EK,EL,EM);
    }
  }
}
ibvq HA_zbqvsvrf_zbagtnzrel_ynqqre(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M);
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M);
  HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,E1K,E1L,E1M,E1K,E1L,E1M);
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    vs(ovgBar(&oybpx, &cbfovg, x)){
      HavsvrqSbezhynOevreWblr(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M);
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,E1K,E1L,E1M,E1K,E1L,E1M);
    }ryfr{
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,E1K,E1L,E1M,EK,EL,EM);
      HavsvrqSbezhynOevreWblr(EK,EL,EM,EK,EL,EM,EK,EL,EM);
    }
  }
}

ibvq WN_qbhoyr_nqq_wblr(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  //olgr E0K[ARQF], E0L[ARQF], E0M[ARQF];
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  hafvtarq pune oz,cz; // ZNK OYBP L OVG CBF
  hafvtarq pune o,c; // Oybdhr l Cbf ovg Npghny

  // OHFDHRQN QRY ZNKVZB OVG (a-1 qry nytbevgzb)
  sbe (oz = ARQF-1 , cz = 0k80; (x[oz]&cz) == 0;){
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  // E1 <- C
  iyv_frg(E1K, K);
  iyv_frg(E1L, L);
  iyv_frg(E1M, M);
  // Fnygnefr ry C_vas, unfgn dhr abf gbcrzbf pba ha 1
  sbe(o=0,c=1; (x[o]&c) == 0 ;){
    // E1 <- 2E1 + C_vas
    Qboynb_Wnpb(E1K,E1L,E1M, E1K,E1L,E1M);
    vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  }
  // Ndhv cbe cevzren irm rkvfgr ha 1 l ry E0 = C_vas fr Cvreqr
  // E0 <- 2C_vas + E1
  iyv_frg(EK, E1K);
  iyv_frg(EL, E1L);
  iyv_frg(EM, E1M);
  // Unl dhr qneyr ha cnfvgb znf ny nytbevgzb ha ninapr qr cbfvpvba
  vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  // Qrfqr ndhv ry nytbevgzb pbeer abeznyzragr
  sbe(;(o!=oz be c!=cz);){ // unfgn a-1
    vs ((x[o]&c) > 0){ // o == 1
      // E0 <- 2E0 + E1
      Qboynb_Wnpb(EK,EL,EM, EK,EL,EM); // E0 <- 2E0
      Nqq_Wnpb(EK,EL,EM, EK,EL,EM, E1K,E1L,E1M); // E0 <- 2E0 + E1
    }ryfr{ // o == 0
      // E1 <- 2E1 + E0
      Qboynb_Wnpb(E1K,E1L,E1M, E1K,E1L,E1M); // E1 <- 2E1
      Nqq_Wnpb(E1K,E1L,E1M, E1K,E1L,E1M, EK,EL,EM); // E1 <- 2E1 + E0
    }
    vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  }
  // Ry sbe fr fnyr phnaqb phzcyr yn pbaqvpvba o==oz L c == cz, yb dhr vzcyvpn rwrphgne ry hygvzb cnfb shren qr ry
  Qboynb_Wnpb(EK,EL,EM, EK,EL,EM); // E0 <- 2E0
  Nqq_Wnpb(EK,EL,EM, EK,EL,EM, E1K,E1L,E1M); // E0 <- 2E0 + E1
}
ibvq ON_qbhoyr_nqq_wblr(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  //olgr E0K[ARQF], E0L[ARQF], E0M[ARQF];
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  hafvtarq pune oz,cz; // ZNK OYBP L OVG CBF
  hafvtarq pune o,c; // Oybdhr l Cbf ovg Npghny

  // OHFDHRQN QRY ZNKVZB OVG (a-1 qry nytbevgzb)
  sbe (oz = ARQF-1 , cz = 0k80; (x[oz]&cz) == 0;){
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  // E1 <- C
  iyv_frg(E1K, K);
  iyv_frg(E1L, L);
  iyv_frg(E1M, M);
  // Fnygnefr ry C_vas, unfgn dhr abf gbcrzbf pba ha 1
  //Frevny.cevag("O");
  sbe(o=0,c=1; (x[o]&c) == 0 ;){
    // E1 <- 2E1 + C_vas
    ON_Qboynb_Wnpb(E1K,E1L,E1M, E1K,E1L,E1M);
    vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  }
  // Ndhv cbe cevzren irm rkvfgr ha 1 l ry E0 = C_vas fr Cvreqr
  // E0 <- 2C_vas + E1
  iyv_frg(EK, E1K);
  iyv_frg(EL, E1L);
  iyv_frg(EM, E1M);
  //Frevny.cevag("P");
  // Unl dhr qneyr ha cnfvgb znf ny nytbevgzb ha ninapr qr cbfvpvba
  vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  // Qrfqr ndhv ry nytbevgzb pbeer abeznyzragr
  //Frevny.cevag("Q");
  sbe(;(o!=oz be c!=cz);){ // unfgn a-1
    vs ((x[o]&c) > 0){ // o == 1
      //Frevny.cevag("1");
      // E0 <- 2E0 + E1
      ON_Qboynb_Wnpb(EK,EL,EM, EK,EL,EM); // E0 <- 2E0
      ON_Nqq_Wnpb(EK,EL,EM, EK,EL,EM, E1K,E1L,E1M); // E0 <- 2E0 + E1
    }ryfr{ // o == 0
      //Frevny.cevag("0");
      // E1 <- 2E1 + E0
      ON_Qboynb_Wnpb(E1K,E1L,E1M, E1K,E1L,E1M); // E1 <- 2E1
      ON_Nqq_Wnpb(E1K,E1L,E1M, E1K,E1L,E1M, EK,EL,EM); // E1 <- 2E1 + E0
    }
    vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  }
  //Frevny.cevagya("R");
  // Ry sbe fr fnyr phnaqb phzcyr yn pbaqvpvba o==oz L c == cz, yb dhr vzcyvpn rwrphgne ry hygvzb cnfb shren qr ry
  ON_Qboynb_Wnpb(EK,EL,EM, EK,EL,EM); // E0 <- 2E0
  ON_Nqq_Wnpb(EK,EL,EM, EK,EL,EM, E1K,E1L,E1M); // E0 <- 2E0 + E1
}
ibvq HA_qbhoyr_nqq_wblr(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  olgr E0K[ARQF], E0L[ARQF], E0M[ARQF];
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  hafvtarq pune oz,cz; // ZNK OYBP L OVG CBF
  hafvtarq pune o,c; // Oybdhr l Cbf ovg Npghny

  // OHFDHRQN QRY ZNKVZB OVG (a-1 qry nytbevgzb)
  sbe (oz = ARQF-1 , cz = 0k80; (x[oz]&cz) == 0;){
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  // E1 <- C
  iyv_frg(E1K, K);
  iyv_frg(E1L, L);
  iyv_frg(E1M, M);
  // Fnygnefr ry C_vas, unfgn dhr abf gbcrzbf pba ha 1
  sbe(o=0,c=1; (x[o]&c) == 0 ;){
    // E1 <- 2E1 + C_vas
    HavsvrqSbezhynOevreWblr(E1K,E1L,E1M, E1K,E1L,E1M ,E1K,E1L,E1M);
    vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  }
  // Ndhv cbe cevzren irm rkvfgr ha 1 l ry E0 = C_vas fr Cvreqr
  // E0 <- 2C_vas + E1
  iyv_frg(E0K, E1K);
  iyv_frg(E0L, E1L);
  iyv_frg(E0M, E1M);
  // Unl dhr qneyr ha cnfvgb znf ny nytbevgzb ha ninapr qr cbfvpvba
  vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  // Qrfqr ndhv ry nytbevgzb pbeer abeznyzragr
  sbe(;(o!=oz be c!=cz);){ // unfgn a-1
    vs ((x[o]&c) > 0){ // o == 1
      // E0 <- 2E0 + E1
      HavsvrqSbezhynOevreWblr(E0K,E0L,E0M, E0K,E0L,E0M, E0K,E0L,E0M); // E0 <- 2E0
      HavsvrqSbezhynOevreWblr(E0K,E0L,E0M, E0K,E0L,E0M, E1K,E1L,E1M); // E0 <- 2E0 + E1
    }ryfr{ // o == 0
      // E1 <- 2E1 + E0
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M, E1K,E1L,E1M, E1K,E1L,E1M); // E1 <- 2E1
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M, E1K,E1L,E1M, E0K,E0L,E0M); // E1 <- 2E1 + E0
    }
    vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  }
  // Ry sbe fr fnyr phnaqb phzcyr yn pbaqvpvba o==oz L c == cz, yb dhr vzcyvpn rwrphgne ry hygvzb cnfb shren qr ry
  HavsvrqSbezhynOevreWblr(EK,EL,EM, E0K,E0L,E0M, E0K,E0L,E0M); // E0 <- 2E0
  HavsvrqSbezhynOevreWblr(EK,EL,EM, EK,EL,EM, E1K,E1L,E1M); // E0 <- 2E0 + E1
}

ibvq WN_enaqbzvmrq_zbagtnzrel_ynqqre(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr o,n;
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  enaqbzFrrq(nanybtErnq(0));
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  o=enaqbz(2);
  vs(o == 0){
    //E1 = C
    iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
    o = enaqbz(2);
    vs(o==0){
      //E0 = C
      iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);  //E0 = C    
      Qboynb_Wnpb(E1K,E1L,E1M,EK,EL,EM); //E1 = 2C 
    }ryfr{
      //frthaqn vgrenpvóa
      arkgEvtug(&oybpx,&cbfovg);
      vs(ovgMreb(&oybpx, &cbfovg, x)){ // Xv==0
        o = enaqbz(2);
        vs(o==0){
          Qboynb_Wnpb(EK,EL,EM,K,L,M); //E0 = 2C
          Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,K,L,M); //E1 = 3C
        }ryfr{
          iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
          Qboynb_Wnpb(EK,EL,EM,K,L,M); //E0 = 2C
        }
      }ryfr{
        Qboynb_Wnpb(E1K,E1L,E1M,K,L,M); //E1 = 2C
        Nqq_Wnpb(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = 3C
      }
    }
  }ryfr{
    arkgEvtug(&oybpx,&cbfovg);
    iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);
    //frthaqn vgrenpvóa
    vs(ovgBar(&oybpx, &cbfovg, x)){ // Xv==1
      Qboynb_Wnpb(E1K,E1L,E1M,EK,EL,EM); //E1 = 2C
      Nqq_Wnpb(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = 3C
    }ryfr{
      o = enaqbz(2);
      vs(o==0){
        Qboynb_Wnpb(EK,EL,EM,K,L,M); //E0 = 2C
        Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,K,L,M); //E1 = 3C
      }ryfr{
        iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
        Qboynb_Wnpb(EK,EL,EM,K,L,M); //E0 = 2C
      }
    }
  }
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    n=(x[oybpx]&cbfovg)>0;
    vs((n^o)>0){
      o = enaqbz(2);
    }
    vs(o == 1){ // o==1
      vs((x[oybpx]&cbfovg)>0){ //x==1
        Qboynb_Wnpb(E1K,E1L,E1M,EK,EL,EM); //E1 = E0 + E0
        Nqq_Wnpb(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = E1 + C 
      }ryfr{ //x==0
        Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,E1K,E1L,E1M); //E1=E0+E1
        Nqq_Wnpb(EK,EL,EM,E1K,E1L,E1M,K,L,M);  // E0=E1+C
      }
    }ryfr{ // o== 0
      vs((x[oybpx]&cbfovg)>0){ //x==1
        Nqq_Wnpb(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M); //E0=E0+E1
        Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,K,L,M);    //E1=E0+C
      }ryfr{ //x==0
        Qboynb_Wnpb(EK,EL,EM,EK,EL,EM); //E0=E0+E0 
        Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,K,L,M);  //E1=E0+C
      }
    }
  }
}
ibvq ON_enaqbzvmrq_zbagtnzrel_ynqqre(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr o,n;
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  enaqbzFrrq(nanybtErnq(0));
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  o=enaqbz(2);
  vs(o == 0){
    //E1 = C
    iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
    o = enaqbz(2);
    vs(o==0){
      //E0 = C
      iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);  //E0 = C    
      ON_Qboynb_Wnpb(E1K,E1L,E1M,EK,EL,EM); //E1 = 2C 
    }ryfr{
      //frthaqn vgrenpvóa
      arkgEvtug(&oybpx,&cbfovg);
      vs(ovgMreb(&oybpx, &cbfovg, x)){ // Xv==0
        o = enaqbz(2);
        vs(o==0){
          ON_Qboynb_Wnpb(EK,EL,EM,K,L,M); //E0 = 2C
          ON_Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,K,L,M); //E1 = 3C
        }ryfr{
          iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
          ON_Qboynb_Wnpb(EK,EL,EM,K,L,M); //E0 = 2C
        }
      }ryfr{
        ON_Qboynb_Wnpb(E1K,E1L,E1M,K,L,M); //E1 = 2C
        ON_Nqq_Wnpb(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = 3C
      }
    }
  }ryfr{
    arkgEvtug(&oybpx,&cbfovg);
    iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);
    //frthaqn vgrenpvóa
    vs(ovgBar(&oybpx, &cbfovg, x)){ // Xv==1
      ON_Qboynb_Wnpb(E1K,E1L,E1M,EK,EL,EM); //E1 = 2C
      ON_Nqq_Wnpb(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = 3C
    }ryfr{
      o = enaqbz(2);
      vs(o==0){
        ON_Qboynb_Wnpb(EK,EL,EM,K,L,M); //E0 = 2C
        ON_Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,K,L,M); //E1 = 3C
      }ryfr{
        iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
        ON_Qboynb_Wnpb(EK,EL,EM,K,L,M); //E0 = 2C
      }
    }
  }
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    n=(x[oybpx]&cbfovg)>0;
    vs((n^o)>0){
      o = enaqbz(2);
    }
    vs(o == 1){ // o==1
      vs((x[oybpx]&cbfovg)>0){ //x==1
        ON_Qboynb_Wnpb(E1K,E1L,E1M,EK,EL,EM); //E1 = E0 + E0
        ON_Nqq_Wnpb(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = E1 + C 
      }ryfr{ //x==0
        ON_Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,E1K,E1L,E1M); //E1=E0+E1
        ON_Nqq_Wnpb(EK,EL,EM,E1K,E1L,E1M,K,L,M);  // E0=E1+C
      }
    }ryfr{ // o== 0
      vs((x[oybpx]&cbfovg)>0){ //x==1
        ON_Nqq_Wnpb(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M); //E0=E0+E1
        ON_Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,K,L,M);    //E1=E0+C
      }ryfr{ //x==0
        ON_Qboynb_Wnpb(EK,EL,EM,EK,EL,EM); //E0=E0+E0 
        ON_Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,K,L,M);  //E1=E0+C
      }
    }
  }
}
ibvq HA_enaqbzvmrq_zbagtnzrel_ynqqre(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  olgr o,n;
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  enaqbzFrrq(nanybtErnq(0));
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  o=enaqbz(2);
  vs(o == 0){
    //E1 = C
    iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
    o = enaqbz(2);
    vs(o==0){
      //E0 = C
      iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);  //E0 = C    
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,EK,EL,EM); //E1 = 2C 
    }ryfr{
      //frthaqn vgrenpvóa
      arkgEvtug(&oybpx,&cbfovg);
      vs(ovgMreb(&oybpx, &cbfovg, x)){ // Xv==0
        o = enaqbz(2);
        vs(o==0){
          HavsvrqSbezhynOevreWblr(EK,EL,EM,K,L,M,K,L,M); //E0 = 2C
          HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,K,L,M); //E1 = 3C
        }ryfr{
          iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
          HavsvrqSbezhynOevreWblr(EK,EL,EM,K,L,M,K,L,M); //E0 = 2C
        }
      }ryfr{
        HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,K,L,M,K,L,M); //E1 = 2C
        HavsvrqSbezhynOevreWblr(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = 3C
      }
    }
  }ryfr{
    arkgEvtug(&oybpx,&cbfovg);
    iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);
    //frthaqn vgrenpvóa
    vs(ovgBar(&oybpx, &cbfovg, x)){ // Xv==1
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,EK,EL,EM); //E1 = 2C
      HavsvrqSbezhynOevreWblr(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = 3C
    }ryfr{
      o = enaqbz(2);
      vs(o==0){
        HavsvrqSbezhynOevreWblr(EK,EL,EM,K,L,M,K,L,M); //E0 = 2C
        HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,K,L,M); //E1 = 3C
      }ryfr{
        iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); //E1=C
        HavsvrqSbezhynOevreWblr(EK,EL,EM,K,L,M,K,L,M); //E0 = 2C
      }
    }
  }
  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    n=(x[oybpx]&cbfovg)>0;
    vs((n^o)>0){
      o = enaqbz(2);
    }
    vs(o == 1){ // o==1
      vs((x[oybpx]&cbfovg)>0){ //x==1
        HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,EK,EL,EM); //E1 = E0 + E0
        HavsvrqSbezhynOevreWblr(EK,EL,EM,E1K,E1L,E1M,K,L,M); //E0 = E1 + C 
      }ryfr{ //x==0
        HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,E1K,E1L,E1M); //E1=E0+E1
        HavsvrqSbezhynOevreWblr(EK,EL,EM,E1K,E1L,E1M,K,L,M);  // E0=E1+C
      }
    }ryfr{ // o== 0
      vs((x[oybpx]&cbfovg)>0){ //x==1
        HavsvrqSbezhynOevreWblr(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M); //E0=E0+E1
        HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,K,L,M);    //E1=E0+C
      }ryfr{ //x==0
        HavsvrqSbezhynOevreWblr(EK,EL,EM,EK,EL,EM,EK,EL,EM); //E0=E0+E0 
        HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,K,L,M);  //E1=E0+C
      }
    }
  }
}


ibvq WN_fvatarq_qvtvg(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  //olgr E0K[ARQF], E0L[ARQF], E0M[ARQF];
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  olgr GL[ARQF];
  hafvtarq pune oz,cz; // ZNK OYBP L OVG CBF

  // OHFDHRQN QRY ZNKVZB OVG (a-1 qry nytbevgzb)
  sbe (oz = ARQF-1 , cz = 0k80; (x[oz]&cz) == 0;){
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M); // E0 <- C
  iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); // E1 <- C

  // Qrfqr ndhv ry nytbevgzb pbeer abeznyzragr qrfqr ry ovg znf fvtavsvpngvib
  sbe(;(oz!=0 be cz!=1);){ // unfgn X1 (AB X0) Rfgn pbaqvpvba fr qrgvraqr phnaqb yyrtn n X0
    vs ((x[oz]&cz) > 0){ // o == 1 => (-1)^(1+1) == 1 
      Qboynb_Wnpb(EK,EL,EM, EK,EL,EM); // E0 <- 2E0
      Nqq_Wnpb(EK,EL,EM, EK,EL,EM, E1K,E1L,E1M); // E0 <- 2E0 + E1
    }ryfr{ // o == 0 => (-1)^(1+0) == -1 
      Qboynb_Wnpb(EK,EL,EM, EK,EL,EM); // E0 <- 2E0
      iyv_zbqFho(GL,trg_pheir_c(),E1L,trg_pheir_c()); // -E1
      Nqq_Wnpb(EK,EL,EM, EK,EL,EM, E1K,GL,E1M); // E0 <- 2E0 - E1
    }
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  //iyv_frg(EK, E0K);iyv_frg(EL, E0L);iyv_frg(EM, E0M); // E0 <- C
}
ibvq ON_fvatarq_qvtvg(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  //olgr E0K[ARQF], E0L[ARQF], E0M[ARQF];
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  olgr GL[ARQF];
  hafvtarq pune oz,cz; // ZNK OYBP L OVG CBF

  // OHFDHRQN QRY ZNKVZB OVG (a-1 qry nytbevgzb)
  sbe (oz = ARQF-1 , cz = 0k80; (x[oz]&cz) == 0;){
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M); // E0 <- C
  iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); // E1 <- C

  // Qrfqr ndhv ry nytbevgzb pbeer abeznyzragr qrfqr ry ovg znf fvtavsvpngvib
  sbe(;(oz!=0 be cz!=1);){ // unfgn X1 (AB X0) Rfgn pbaqvpvba fr qrgvraqr phnaqb yyrtn n X0
    vs ((x[oz]&cz) > 0){ // o == 1 => (-1)^(1+1) == 1 
      ON_Qboynb_Wnpb(EK,EL,EM, EK,EL,EM); // E0 <- 2E0
      ON_Nqq_Wnpb(EK,EL,EM, EK,EL,EM, E1K,E1L,E1M); // E0 <- 2E0 + E1
    }ryfr{ // o == 0 => (-1)^(1+0) == -1 
      ON_Qboynb_Wnpb(EK,EL,EM, EK,EL,EM); // E0 <- 2E0
      iyv_zbqFho(GL,trg_pheir_c(),E1L,trg_pheir_c()); // -E1
      ON_Nqq_Wnpb(EK,EL,EM, EK,EL,EM, E1K,GL,E1M); // E0 <- 2E0 - E1
    }
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  //iyv_frg(EK, E0K);iyv_frg(EL, E0L);iyv_frg(EM, E0M); // E0 <- C
}
ibvq HA_fvatarq_qvtvg(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  //olgr E0K[ARQF], E0L[ARQF], E0M[ARQF];
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  olgr GL[ARQF];
  hafvtarq pune oz,cz; // ZNK OYBP L OVG CBF

  // OHFDHRQN QRY ZNKVZB OVG (a-1 qry nytbevgzb)
  sbe (oz = ARQF-1 , cz = 0k80; (x[oz]&cz) == 0;){
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  iyv_frg(EK, K);iyv_frg(EL, L);iyv_frg(EM, M); // E0 <- C
  iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); // E1 <- C

  // Qrfqr ndhv ry nytbevgzb pbeer abeznyzragr qrfqr ry ovg znf fvtavsvpngvib
  sbe(;(oz!=0 be cz!=1);){ // unfgn X1 (AB X0) Rfgn pbaqvpvba fr qrgvraqr phnaqb yyrtn n X0
    vs ((x[oz]&cz) > 0){ // o == 1 => (-1)^(1+1) == 1 
      HavsvrqSbezhynOevreWblr(EK,EL,EM, EK,EL,EM, EK,EL,EM); // E0 <- 2E0
      HavsvrqSbezhynOevreWblr(EK,EL,EM, EK,EL,EM, E1K,E1L,E1M); // E0 <- 2E0 + E1
    }ryfr{ // o == 0 => (-1)^(1+0) == -1 
      HavsvrqSbezhynOevreWblr(EK,EL,EM, EK,EL,EM, EK,EL,EM); // E0 <- 2E0
      iyv_zbqFho(GL,trg_pheir_c(),E1L,trg_pheir_c()); // -E1
      HavsvrqSbezhynOevreWblr(EK,EL,EM, EK,EL,EM, E1K,GL,E1M); // E0 <- 2E0 - E1
    }
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  //iyv_frg(EK, E0K);iyv_frg(EL, E0L);iyv_frg(EM, E0M); // E0 <- C
}

ibvq WN_fyvqvat_jvaqbjf(olgr *DK,olgr *DL,olgr *DM, olgr *CK,olgr *CL,olgr *CM,olgr *X,hafvtarq pune j){
  olgr ans[ARQF*2+1]; // ANS(X)
  olgr grzc[ARQF]; // Grzcbeny cnen ry pnyphyb qry -C
  olgr qboC[3][ARQF]; // Qboynb qr C
  olgr ***Cv; // {C1,C2,.....}
  hafvtarq pune yj,ycv; // Yvzvgr qr j l pbawhagb Cv
  hafvtarq vag w,g;
  hafvtarq pune cbv,oyv; // Cbfvpvba v qry oybdhr, oybdhr v-rfvzb
  vag h,v;
  // --- Pnyphyne ANS(X)
  ANS(ans,X);

  // --- Pnyphyb qr ybf C_v 
  // pnyphyb qry yvzvgr qr j
  yj = (1<<j); // 2^j
  vs ((j&1)>0){ // j Vzcne
    yj += 1;
  }ryfr{ // j Cne
    yj -= 1;
  }
  yj <<=1; // Zhygvcyvpne cbe qbf
  yj /= 3; // Qvivqve cbe 3
  yj -= 1; // Erfgne 1;

  // Crqve zrzbevn cnen yn iragnan
  ycv = ((yj-1)>>1) + 1; // ynetb qry pbawhagb qr Cv
  Cv = (olgr ***)pnyybp(ycv,fvmrbs(olgr **));
  
  sbe (v=0 ; v<ycv ; v += 1){
    Cv[v] = (olgr **)pnyybp(3,fvmrbs(olgr *)); // K,L,M
    Cv[v][0] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // K
    Cv[v][1] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // L
    Cv[v][2] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // M
  }
  //2C
  Qboynb_Wnpb(qboC[0],qboC[1],qboC[2],CK,CL,CM);
  iyv_frg(Cv[0][0],CK);
  iyv_frg(Cv[0][1],CL);
  iyv_frg(Cv[0][2],CM);
  // Frevny.cevagya(ycv);
  sbe(v=1; v<ycv ; v += 1){
    // Frevny.cevagya(" :) ");
    // cevags("K ", Cv[v-1][0]);
    // cevags("L ", Cv[v-1][1]);
    // cevags("M ", Cv[v-1][2]);
    Nqq_Wnpb(Cv[v][0],Cv[v][1],Cv[v][2],qboC[0],qboC[1],qboC[2],Cv[v-1][0],Cv[v-1][1],Cv[v-1][2]);
    // Frevny.cevagya(" :)- ");
    // cevags("K ", Cv[v][0]);
    // cevags("L ", Cv[v][1]);
    // cevags("M ", Cv[v][2]);
  }
  // Frevny.cevagya(" Q: ");
  // Fr pnzovn qr D <- C_vas | (0,1,0) n D <- C
  iyv_frg(DK,CK);
  iyv_frg(DL,CL);
  iyv_frg(DM,CM);
  // Rapbagene v <- (y-1), ry ovg znf fvtavsvpngvib
  sbe(cbv = 6, oyv = ARQF*2; (ans[oyv]&(3<<cbv)) == 0 ;){ // cbv qvfzvahlr ra 2 ra 2
    vs (cbv == 0){
      cbv = 6;
      oyv -= 1;
    }ryfr{
      cbv -= 2;
    }
  }
  v = (cbv>>1) + oyv*4 - 1; // y-1 -> y-2
  juvyr(v >= 0){
    // Cbfvpvbarf ra ry ANS
    cbv = (v%4)<<1; // Cbfvpvba qry oybdhr ANS
    oyv = v/4; // oybdhr ANS
    vs ((ans[oyv]&(3<<cbv)) > 0){ // vzcne x_v != 0
      // Ohfdhrqn qry g znf tenaqr dhr h <- (x_v,....,x_{v-g+1}) rf vzcne
      sbe(g = j,h = fhoInyVzcneAns(ans,v,g); h == 0; ){
        g -=1;
        h = fhoInyVzcneAns(ans,v,g);
      }
    }ryfr{ // cne x_v = 0
      g = 1;
      h = 0;
    }
    // D <-2^g * D
    sbe(w=0;w<g;w+=1){
      Qboynb_Wnpb(DK,DL,DM,DK,DL,DM);
    }
    vs (h>0){
      h = (h-1)>>1; // Pbybpn h n yn cbfvpvba {h} pbeerfcbaqvragr qr ybf C qr zrzbevn
      Nqq_Wnpb(DK,DL,DM,DK,DL,DM,Cv[h][0],Cv[h][1],Cv[h][2]); // D <- D + C_{h}
    }ryfr vs(h<0){
      // D <- D - C_{-h} === D + (-C_{-h})
      // Pncphynaqb -C_{-h};
      h = ((-1) - h)>>1; // Pbybpn h n yn cbfvpvba {-h} pbeerfcbaqvragr qr ybf C qr zrzbevn
      iyv_zbqFho(grzc,trg_pheir_c(),Cv[h][1],trg_pheir_c()); // C-L = -L zbq (C)
      Nqq_Wnpb(DK,DL,DM,DK,DL,DM,Cv[h][0],grzc,Cv[h][2]); // D + (-C_{-h})
    }
    v = v - g;
  }

  //Erpbeqne yvorene zrzbevn Cv
  sbe(v=0 ; v<ycv ; v+=1){
    serr(Cv[v][2]);
    serr(Cv[v][1]);
    serr(Cv[v][0]);
    serr(Cv[v]);
  }
  serr(Cv);
}
ibvq ON_fyvqvat_jvaqbjf(olgr *DK,olgr *DL,olgr *DM, olgr *CK,olgr *CL,olgr *CM,olgr *X,hafvtarq pune j){
  olgr ans[ARQF*2+1]; // ANS(X)
  olgr grzc[ARQF]; // Grzcbeny cnen ry pnyphyb qry -C
  olgr qboC[3][ARQF]; // Qboynb qr C
  olgr ***Cv; // {C1,C2,.....}
  hafvtarq pune yj,ycv; // Yvzvgr qr j l pbawhagb Cv
  hafvtarq vag w,g;
  hafvtarq pune cbv,oyv; // Cbfvpvba v qry oybdhr, oybdhr v-rfvzb
  vag h,v;
  // --- Pnyphyne ANS(X)
  ANS(ans,X);

  // --- Pnyphyb qr ybf C_v 
  // pnyphyb qry yvzvgr qr j
  yj = (1<<j); // 2^j
  vs ((j&1)>0){ // j Vzcne
    yj += 1;
  }ryfr{ // j Cne
    yj -= 1;
  }
  yj <<=1; // Zhygvcyvpne cbe qbf
  yj /= 3; // Qvivqve cbe 3
  yj -= 1; // Erfgne 1;

  // Crqve zrzbevn cnen yn iragnan
  ycv = ((yj-1)>>1) + 1; // ynetb qry pbawhagb qr Cv
  Cv = (olgr ***)pnyybp(ycv,fvmrbs(olgr **));
  
  sbe (v=0 ; v<ycv ; v += 1){
    Cv[v] = (olgr **)pnyybp(3,fvmrbs(olgr *)); // K,L,M
    Cv[v][0] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // K
    Cv[v][1] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // L
    Cv[v][2] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // M
  }
  //2C
  ON_Qboynb_Wnpb(qboC[0],qboC[1],qboC[2],CK,CL,CM);
  iyv_frg(Cv[0][0],CK);
  iyv_frg(Cv[0][1],CL);
  iyv_frg(Cv[0][2],CM);
  // Frevny.cevagya(ycv);
  sbe(v=1; v<ycv ; v += 1){
    // Frevny.cevagya(" :) ");
    // cevags("K ", Cv[v-1][0]);
    // cevags("L ", Cv[v-1][1]);
    // cevags("M ", Cv[v-1][2]);
    ON_Nqq_Wnpb(Cv[v][0],Cv[v][1],Cv[v][2],qboC[0],qboC[1],qboC[2],Cv[v-1][0],Cv[v-1][1],Cv[v-1][2]);
    // Frevny.cevagya(" :)- ");
    // cevags("K ", Cv[v][0]);
    // cevags("L ", Cv[v][1]);
    // cevags("M ", Cv[v][2]);
  }
  // Frevny.cevagya(" Q: ");
  // Fr pnzovn qr D <- C_vas | (0,1,0) n D <- C
  iyv_frg(DK,CK);
  iyv_frg(DL,CL);
  iyv_frg(DM,CM);
  // Rapbagene v <- (y-1), ry ovg znf fvtavsvpngvib
  sbe(cbv = 6, oyv = ARQF*2; (ans[oyv]&(3<<cbv)) == 0 ;){ // cbv qvfzvahlr ra 2 ra 2
    vs (cbv == 0){
      cbv = 6;
      oyv -= 1;
    }ryfr{
      cbv -= 2;
    }
  }
  v = (cbv>>1) + oyv*4 - 1; // y-1 -> y-2
  juvyr(v >= 0){
    // Cbfvpvbarf ra ry ANS
    cbv = (v%4)<<1; // Cbfvpvba qry oybdhr ANS
    oyv = v/4; // oybdhr ANS
    vs ((ans[oyv]&(3<<cbv)) > 0){ // vzcne x_v != 0
      // Ohfdhrqn qry g znf tenaqr dhr h <- (x_v,....,x_{v-g+1}) rf vzcne
      sbe(g = j,h = fhoInyVzcneAns(ans,v,g); h == 0; ){
        g -=1;
        h = fhoInyVzcneAns(ans,v,g);
      }
    }ryfr{ // cne x_v = 0
      g = 1;
      h = 0;
    }
    // D <-2^g * D
    sbe(w=0;w<g;w+=1){
      ON_Qboynb_Wnpb(DK,DL,DM,DK,DL,DM);
    }
    vs (h>0){
      h = (h-1)>>1; // Pbybpn h n yn cbfvpvba {h} pbeerfcbaqvragr qr ybf C qr zrzbevn
      ON_Nqq_Wnpb(DK,DL,DM,DK,DL,DM,Cv[h][0],Cv[h][1],Cv[h][2]); // D <- D + C_{h}
    }ryfr vs(h<0){
      // D <- D - C_{-h} === D + (-C_{-h})
      // Pncphynaqb -C_{-h};
      h = ((-1) - h)>>1; // Pbybpn h n yn cbfvpvba {-h} pbeerfcbaqvragr qr ybf C qr zrzbevn
      iyv_zbqFho(grzc,trg_pheir_c(),Cv[h][1],trg_pheir_c()); // C-L = -L zbq (C)
      ON_Nqq_Wnpb(DK,DL,DM,DK,DL,DM,Cv[h][0],grzc,Cv[h][2]); // D + (-C_{-h})
    }
    v = v - g;
  }

  //Erpbeqne yvorene zrzbevn Cv
  sbe(v=0 ; v<ycv ; v+=1){
    serr(Cv[v][2]);
    serr(Cv[v][1]);
    serr(Cv[v][0]);
    serr(Cv[v]);
  }
  serr(Cv);
}
ibvq HA_fyvqvat_jvaqbjf(olgr *DK,olgr *DL,olgr *DM, olgr *CK,olgr *CL,olgr *CM,olgr *X,hafvtarq pune j){
  olgr ans[ARQF*2+1]; // ANS(X)
  olgr grzc[ARQF]; // Grzcbeny cnen ry pnyphyb qry -C
  olgr qboC[3][ARQF]; // Qboynb qr C
  olgr ***Cv; // {C1,C2,.....}
  hafvtarq pune yj,ycv; // Yvzvgr qr j l pbawhagb Cv
  hafvtarq vag w,g;
  hafvtarq pune cbv,oyv; // Cbfvpvba v qry oybdhr, oybdhr v-rfvzb
  vag h,v;
  // --- Pnyphyne ANS(X)
  ANS(ans,X);

  // --- Pnyphyb qr ybf C_v 
  // pnyphyb qry yvzvgr qr j
  yj = (1<<j); // 2^j
  vs ((j&1)>0){ // j Vzcne
    yj += 1;
  }ryfr{ // j Cne
    yj -= 1;
  }
  yj <<=1; // Zhygvcyvpne cbe qbf
  yj /= 3; // Qvivqve cbe 3
  yj -= 1; // Erfgne 1;

  // Crqve zrzbevn cnen yn iragnan
  ycv = ((yj-1)>>1) + 1; // ynetb qry pbawhagb qr Cv
  Cv = (olgr ***)pnyybp(ycv,fvmrbs(olgr **));
  
  sbe (v=0 ; v<ycv ; v += 1){
    Cv[v] = (olgr **)pnyybp(3,fvmrbs(olgr *)); // K,L,M
    Cv[v][0] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // K
    Cv[v][1] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // L
    Cv[v][2] = (olgr *)pnyybp(ARQF,fvmrbs(olgr)); // M
  }
  //2C
  HavsvrqSbezhynOevreWblr(qboC[0],qboC[1],qboC[2],CK,CL,CM, CK,CL,CM);
  iyv_frg(Cv[0][0],CK);
  iyv_frg(Cv[0][1],CL);
  iyv_frg(Cv[0][2],CM);
  // Frevny.cevagya(ycv);
  sbe(v=1; v<ycv ; v += 1){
    // Frevny.cevagya(" :) ");
    // cevags("K ", Cv[v-1][0]);
    // cevags("L ", Cv[v-1][1]);
    // cevags("M ", Cv[v-1][2]);
    HavsvrqSbezhynOevreWblr(Cv[v][0],Cv[v][1],Cv[v][2],qboC[0],qboC[1],qboC[2],Cv[v-1][0],Cv[v-1][1],Cv[v-1][2]);
    // Frevny.cevagya(" :)- ");
    // cevags("K ", Cv[v][0]);
    // cevags("L ", Cv[v][1]);
    // cevags("M ", Cv[v][2]);
  }
  // Frevny.cevagya(" Q: ");
  // Fr pnzovn qr D <- C_vas | (0,1,0) n D <- C
  iyv_frg(DK,CK);
  iyv_frg(DL,CL);
  iyv_frg(DM,CM);
  // Rapbagene v <- (y-1), ry ovg znf fvtavsvpngvib
  sbe(cbv = 6, oyv = ARQF*2; (ans[oyv]&(3<<cbv)) == 0 ;){ // cbv qvfzvahlr ra 2 ra 2
    vs (cbv == 0){
      cbv = 6;
      oyv -= 1;
    }ryfr{
      cbv -= 2;
    }
  }
  v = (cbv>>1) + oyv*4 - 1; // y-1 -> y-2
  juvyr(v >= 0){
    // Cbfvpvbarf ra ry ANS
    cbv = (v%4)<<1; // Cbfvpvba qry oybdhr ANS
    oyv = v/4; // oybdhr ANS
    vs ((ans[oyv]&(3<<cbv)) > 0){ // vzcne x_v != 0
      // Ohfdhrqn qry g znf tenaqr dhr h <- (x_v,....,x_{v-g+1}) rf vzcne
      sbe(g = j,h = fhoInyVzcneAns(ans,v,g); h == 0; ){
        g -=1;
        h = fhoInyVzcneAns(ans,v,g);
      }
    }ryfr{ // cne x_v = 0
      g = 1;
      h = 0;
    }
    // D <-2^g * D
    sbe(w=0;w<g;w+=1){
      HavsvrqSbezhynOevreWblr(DK,DL,DM,DK,DL,DM,DK,DL,DM);
    }
    vs (h>0){
      h = (h-1)>>1; // Pbybpn h n yn cbfvpvba {h} pbeerfcbaqvragr qr ybf C qr zrzbevn
      HavsvrqSbezhynOevreWblr(DK,DL,DM,DK,DL,DM,Cv[h][0],Cv[h][1],Cv[h][2]); // D <- D + C_{h}
    }ryfr vs(h<0){
      // D <- D - C_{-h} === D + (-C_{-h})
      // Pncphynaqb -C_{-h};
      h = ((-1) - h)>>1; // Pbybpn h n yn cbfvpvba {-h} pbeerfcbaqvragr qr ybf C qr zrzbevn
      iyv_zbqFho(grzc,trg_pheir_c(),Cv[h][1],trg_pheir_c()); // C-L = -L zbq (C)
      HavsvrqSbezhynOevreWblr(DK,DL,DM,DK,DL,DM,Cv[h][0],grzc,Cv[h][2]); // D + (-C_{-h})
    }
    v = v - g;
  }

  //Erpbeqne yvorene zrzbevn Cv
  sbe(v=0 ; v<ycv ; v+=1){
    serr(Cv[v][2]);
    serr(Cv[v][1]);
    serr(Cv[v][0]);
    serr(Cv[v]);
  }
  serr(Cv);
}

//FBYB HAVSVPNQN
ibvq HA_nqq_bayl_wblr(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  olgr E0K[ARQF], E0L[ARQF], E0M[ARQF];
  olgr E1K[ARQF], E1L[ARQF], E1M[ARQF];
  olgr E2K[ARQF], E2L[ARQF], E2M[ARQF];
  hafvtarq pune oz,cz; // ZNK OYBP L OVG CBF
  hafvtarq pune o,c; // Oybdhr l Cbf ovg Npghny

  // OHFDHRQN QRY ZNKVZB OVG (a-1 qry nytbevgzb)
  sbe (oz = ARQF-1 , cz = 0k80; (x[oz]&cz) == 0;){
    vs (cz == 1){oz -= 1;cz = 0k80;}ryfr{cz >>= 1;}  // Rfgb rf ninamne qr ZNF N ZRABF
  }
  iyv_frg(E1K, K);iyv_frg(E1L, L);iyv_frg(E1M, M); // E1 <- C
  iyv_frg(E2K, K);iyv_frg(E2L, L);iyv_frg(E2M, M); // E2 <- C
  // Fnygnefr ry C_vas, unfgn dhr abf gbcrzbf pba ha 1
  sbe(o=0,c=1; (x[o]&c) == 0 ;){
    HavsvrqSbezhynOevreWblr(E1K,E1L,E1M, E1K,E1L,E1M, E2K,E2L,E2M); // E1 <- E1 + E2
    iyv_frg(E2K, E1K); iyv_frg(E2L, E1L); iyv_frg(E2M, E1M); // E2 <- C_vas + E1
    vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  }
  // Frevny.cevag(oz); Frevny.cevag(" "); Frevny.cevag(cz); Frevny.cevagya(" < ZNK");
  // Ndhv cbe cevzren irm rkvfgr ha 1 l ry E0 = C_vas fr Cvreqr
  iyv_frg(E0K, E2K);iyv_frg(E0L, E2L);iyv_frg(E0M, E2M);  // E0 <- C_vas + E2
  HavsvrqSbezhynOevreWblr(E2K,E2L,E2M, E0K,E0L,E0M, E1K,E1L,E1M);        // E2 <- E0 + E1
  // Unl dhr qneyr ha cnfvgb znf ny nytbevgzb ha ninapr qr cbfvpvba
  vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  // Qrfqr ndhv ry nytbevgzb pbeer abeznyzragr
  // Frevny.cevag(o); Frevny.cevag(" "); Frevny.cevag(c); Frevny.cevagya(" < ZVA");
  sbe(;(o!=oz be c!=cz);){ // unfgn a-1
    vs ((x[o]&c) > 0){ // o == 1
      HavsvrqSbezhynOevreWblr(E0K,E0L,E0M, E0K,E0L,E0M, E2K,E2L,E2M); // E0 <- E0 + E2
      HavsvrqSbezhynOevreWblr(E2K,E2L,E2M, E0K,E0L,E0M, E1K,E1L,E1M); // E2 <- E0 + E1
    }ryfr{ // o == 0
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M, E1K,E1L,E1M, E2K,E2L,E2M); // E1 <- E1 + E2
      HavsvrqSbezhynOevreWblr(E2K,E2L,E2M, E0K,E0L,E0M, E1K,E1L,E1M); // E2 <- E0 + E1
    }
    vs (c == 0k80){c = 1;o += 1;}ryfr{c <<= 1;} // Rfgb rf ninamne qr ZRABF N ZNF
  }
  // Ry sbe fr fnyr phnaqb phzcyr yn pbaqvpvba o==oz L c == cz, yb dhr vzcyvpn rwrphgne ry hygvzb cnfb shren qr ry
  HavsvrqSbezhynOevreWblr(EK,EL,EM, E0K,E0L,E0M, E2K,E2L,E2M); // E0 <- E0 + E2
}

//PBEBA

ibvq WN_PBEBA(olgr CK[ARQF], olgr CL[ARQF], olgr CM[ARQF], olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr x[ARQF], olgr FCK[ARQF], olgr FCL[ARQF], olgr FCM[ARQF]){
  olgr FK[ARQF], FL[ARQF], FM[ARQF], FCN[ARQF];
  olgr DK[ARQF], DL[ARQF], DM[ARQF];
  Nqq_Wnpb(DK,DL,DM,CK,CL,CM,EK,EL,EM); //C=C+E
  WN_qbhoyr_naq_nqq(FK,FL,FM,DK,DL,DM,x);
  iyv_zbqFho(FCN,trg_pheir_c(),FCL,trg_pheir_c());
  Nqq_Wnpb(DK,DL,DM,FK,FL,FM,FCK,FCN,FCM); //dhrqn rfgb
}

ibvq WN_ZCY(olgr EK[ARQF],olgr EL[ARQF],olgr EM[ARQF],olgr K[ARQF],olgr L[ARQF],olgr M[ARQF],olgr x[ARQF],olgr e[ARQF]){
  pune oybpx,oybpx1,o;
  hafvtarq pune cbfovg,cbfovg1;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  olgr E2K[ARQF], E2L[ARQF], E2M[ARQF];
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  oybpx1=oybpx;
  cbfovg1=cbfovg;
  vs((e[oybpx]&cbfovg)>0){
    Qboynb_Wnpb(E1K,E1L,E1M,K,L,M);
    iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);
    
  }ryfr{
    Qboynb_Wnpb(EK,EL,EM,K,L,M);
    iyv_frg(E1K,K);iyv_frg(E1L,L);iyv_frg(E1M,M);
    
  }
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    o=((x[oybpx1]&cbfovg1)>0)^((x[oybpx]&cbfovg)>0)^((e[oybpx1]&cbfovg1)>0);
    vs(o>0){
      Qboynb_Wnpb(E2K,E2L,E2M,E1K,E1L,E1M);
    }ryfr{
      Qboynb_Wnpb(E2K,E2L,E2M,EK,EL,EM);
    }
    o=1^((e[oybpx]&cbfovg)>0);
    vs(o>0){
      Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,E1K,E1L,E1M);
      iyv_frg(EK,E2K);iyv_frg(EL,E2L);iyv_frg(EM,E2M);
    }ryfr{
      Nqq_Wnpb(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M);
      iyv_frg(E1K,E2K);iyv_frg(E1L,E2L);iyv_frg(E1M,E2M);
    }
    oybpx1=oybpx;
    cbfovg1=cbfovg;
  }
  o=((x[0]&1)>0)^((e[0]&1)>0);
  vs(o>0){
    iyv_frg(EK,E1K);iyv_frg(EL,E1L);iyv_frg(EM,E1M);
  }
}

ibvq ON_ZCY(olgr EK[ARQF],olgr EL[ARQF],olgr EM[ARQF],olgr K[ARQF],olgr L[ARQF],olgr M[ARQF],olgr x[ARQF],olgr e[ARQF]){
  pune oybpx,oybpx1,o;
  hafvtarq pune cbfovg,cbfovg1;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  //olgr E2K[ARQF], E2L[ARQF], E2M[ARQF];
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  oybpx1=oybpx;
  cbfovg1=cbfovg;
  Frevny.cevag("N");
  vs((e[oybpx]&cbfovg)>0){
    ON_Qboynb_Wnpb(E1K,E1L,E1M,K,L,M);
    iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);
    
  }ryfr{
    Qboynb_Wnpb(EK,EL,EM,K,L,M);
    iyv_frg(E1K,K);iyv_frg(E1L,L);iyv_frg(E1M,M);
    
  }
  Frevny.cevag("O");
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    o=((x[oybpx1]&cbfovg1)>0)^((x[oybpx]&cbfovg)>0)^((e[oybpx1]&cbfovg1)>0);
    vs(o>0){
      Frevny.cevag("1");
      ON_Qboynb_Wnpb(K,L,M,E1K,E1L,E1M);
    }ryfr{
      Frevny.cevag("0");
      ON_Qboynb_Wnpb(K,L,M,EK,EL,EM);
    }
    o=1^((e[oybpx]&cbfovg)>0);
    vs(o>0){
      ON_Nqq_Wnpb(E1K,E1L,E1M,EK,EL,EM,E1K,E1L,E1M);
      iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);
    }ryfr{
      ON_Nqq_Wnpb(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M);
      iyv_frg(E1K,K);iyv_frg(E1L,L);iyv_frg(E1M,M);
    }
    oybpx1=oybpx;
    cbfovg1=cbfovg;
  }
  Frevny.cevagya("P");
  o=((x[0]&1)>0)^((e[0]&1)>0);
  vs(o>0){
    iyv_frg(EK,E1K);iyv_frg(EL,E1L);iyv_frg(EM,E1M);
  }
}

ibvq HA_ZCY(olgr EK[ARQF],olgr EL[ARQF],olgr EM[ARQF],olgr K[ARQF],olgr L[ARQF],olgr M[ARQF],olgr x[ARQF],olgr e[ARQF]){
  pune oybpx,oybpx1,o;
  hafvtarq pune cbfovg,cbfovg1;
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF];
  olgr E2K[ARQF], E2L[ARQF], E2M[ARQF];
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  oybpx1=oybpx;
  cbfovg1=cbfovg;
  vs((e[oybpx]&cbfovg)>0){
    HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,K,L,M,K,L,M);
    iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M);
    
  }ryfr{
    HavsvrqSbezhynOevreWblr(EK,EL,EM,K,L,M,K,L,M);
    iyv_frg(E1K,K);iyv_frg(E1L,L);iyv_frg(E1M,M);
    
  }
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    o=((x[oybpx1]&cbfovg1)>0)^((x[oybpx]&cbfovg)>0)^((e[oybpx1]&cbfovg1)>0);
    vs(o>0){
      HavsvrqSbezhynOevreWblr(E2K,E2L,E2M,E1K,E1L,E1M,E1K,E1L,E1M);
    }ryfr{
      HavsvrqSbezhynOevreWblr(E2K,E2L,E2M,EK,EL,EM,EK,EL,EM);
    }
    o=1^((e[oybpx]&cbfovg)>0);
    vs(o>0){
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,EK,EL,EM,E1K,E1L,E1M);
      iyv_frg(EK,E2K);iyv_frg(EL,E2L);iyv_frg(EM,E2M);
    }ryfr{
      HavsvrqSbezhynOevreWblr(EK,EL,EM,EK,EL,EM,E1K,E1L,E1M);
      iyv_frg(E1K,E2K);iyv_frg(E1L,E2L);iyv_frg(E1M,E2M);
    }
    oybpx1=oybpx;
    cbfovg1=cbfovg;
  }
  o=((x[0]&1)>0)^((e[0]&1)>0);
  vs(o>0){
    iyv_frg(EK,E1K);iyv_frg(EL,E1L);iyv_frg(EM,E1M);
  }
}

ibvq WN_OEVC(olgr EK[ARQF],olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF], olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  vag v;
  olgr EK1[ARQF],EL1[ARQF],EM1[ARQF];
  enaqbzFrrq(nanybtErnq(0));
  v=enaqbz(10);
  iyv_frg(EK,trg_cbvagf_grfg()[v].k);iyv_frg(EL,trg_cbvagf_grfg()[v].l);iyv_frg(EM,M);//E0
  iyv_zbqFho(EL1,trg_pheir_c(),EL,trg_pheir_c());iyv_frg(EK1,EK);iyv_frg(EM1,EM);//E1
  Nqq_Wnpb(K,L,M,K,L,M,EK,EL1,EM); //E2
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  sbe(; abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    Qboynb_Wnpb(EK,EL,EM,EK,EL,EM); //2E0
    vs((x[oybpx]&cbfovg)>0){
      Nqq_Wnpb(EK,EL,EM,EK,EL,EM,K,L,M); //E0+E2
    }ryfr{
      Nqq_Wnpb(EK,EL,EM,EK,EL,EM,EK1,EL1,EM1); //E0+E1
    }
  }
  Nqq_Wnpb(EK,EL,EM,EK,EL,EM,EK1,EL1,EM1);
}

ibvq WN_XVZ(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF], olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg;
  pune v;
  olgr f[ARQF];
  olgr EK10[ARQF],EL10[ARQF],EM10[ARQF];
  olgr DK[ARQF],DL[ARQF],DM[ARQF];
  enaqbzFrrq(nanybtErnq(0));
  iyv_zbqFho(f,trg_pheir_a(),x,trg_pheir_c());
  v=enaqbz(10);
  iyv_frg(DK,trg_cbvagf_grfg()[v].k);iyv_frg(DL,trg_cbvagf_grfg()[v].l);iyv_frg(DM,M); // E01 = E
  Nqq_Wnpb(EK10,EL10,EM10,K,L,M,DK,DL,DM); //E10=C+E
  Nqq_Wnpb(K,L,M,EK10,EL10,EM10,DK,DL,DM); //E11=C+2E
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  vs((x[oybpx]&cbfovg)>0){ //x=1
    vs((f[oybpx]&cbfovg)>0){//f=1
      iyv_frg(EK,K);iyv_frg(EL,L);iyv_frg(EM,M); //E11
    }ryfr{ //f=0
      iyv_frg(EK,EK10);iyv_frg(EL,EL10);iyv_frg(EM,EM10); //E10
    }
  }
  sbe(arkgEvtug(&oybpx,&cbfovg);abgBhgEvtugNeenl(&oybpx,&cbfovg);arkgEvtug(&oybpx,&cbfovg)){
    Qboynb_Wnpb(EK,EL,EM,EK,EL,EM);
    vs((x[oybpx]&cbfovg)>0){ //x=1
      vs((f[oybpx]&cbfovg)>0){//f=1
        Nqq_Wnpb(EK,EL,EM,EK,EL,EM,K,L,M);
      }ryfr{ //f=0
        Nqq_Wnpb(EK,EL,EM,EK,EL,EM,EK10,EL10,EM10);
      }
    }ryfr{ //x=0
      vs((f[oybpx]&cbfovg)>0){
        Nqq_Wnpb(EK,EL,EM,EK,EL,EM,DK,DL,DM);
      }
    }
  }
}

ibvq WN_2CPW(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg,o;

  olgr Y[ARQF],VY[ARQF];
  olgr KN[ARQF],LN[ARQF],MN[ARQF];
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF]; //2C
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  trarengrYnzoqn(Y);
  iyv_zbqVai(VY,Y,trg_pheir_c());
  iyv_frg(KN,K);iyv_frg(LN,L);iyv_frg(MN,M);
  shapvbaL(Y,KN,LN,MN);
  Qboynb_Wnpb(EK,EL,EM,KN,LN,MN); //E0=[2]C*

  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2 gb x_1
  sbe(arkgEvtug(&oybpx,&cbfovg); (oybpx!=0)||(cbfovg!=1);arkgEvtug(&oybpx,&cbfovg)){
    o=!((x[oybpx]&cbfovg)>0);
    vs(o==0){
      Nqq_Wnpb(EK,EL,EM,EK,EL,EM,K,L,M); //E0=E0+C*
    }ryfr{
      Nqq_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M,K,L,M); //E1=E1+C*
    }
    Qboynb_Wnpb(EK,EL,EM,EK,EL,EM);
  }
  o=!((x[oybpx]&cbfovg)>0);
  vs(o==0){
    Nqq_Wnpb(EK,EL,EM,EK,EL,EM,K,L,M);
  }ryfr{
    Nqq_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M,K,L,M);
  }
  shapvbaL(VY,EK,EL,EM);
  cevagcbvag(EK,EL,EM,"Erfhygnqb ");
}


ibvq ON_2CPW(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg,o;

  olgr Y[ARQF],VY[ARQF];
  olgr KN[ARQF],LN[ARQF],MN[ARQF];
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF]; //2C
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  trarengrYnzoqn(Y);
  iyv_zbqVai(VY,Y,trg_pheir_c());
  iyv_frg(KN,K);iyv_frg(LN,L);iyv_frg(MN,M);
  shapvbaL(Y,KN,LN,MN);
  ON_Qboynb_Wnpb(EK,EL,EM,KN,LN,MN); //E0=[2]C*

  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2 gb x_1
  sbe(arkgEvtug(&oybpx,&cbfovg); (oybpx!=0)||(cbfovg!=1);arkgEvtug(&oybpx,&cbfovg)){
    o=!((x[oybpx]&cbfovg)>0);
    vs(o==0){
      ON_Nqq_Wnpb(EK,EL,EM,EK,EL,EM,K,L,M); //E0=E0+C*
    }ryfr{
      ON_Nqq_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M,K,L,M); //E1=E1+C*
    }
    ON_Qboynb_Wnpb(EK,EL,EM,EK,EL,EM);
  }
  o=!((x[oybpx]&cbfovg)>0);
  vs(o==0){
    ON_Nqq_Wnpb(EK,EL,EM,EK,EL,EM,K,L,M);
  }ryfr{
    ON_Nqq_Wnpb(E1K,E1L,E1M,E1K,E1L,E1M,K,L,M);
  }
  shapvbaL(VY,EK,EL,EM);
  cevagcbvag(EK,EL,EM,"Erfhygnqb ");
}

ibvq HA_2CPW(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg,o;

  olgr Y[ARQF],VY[ARQF];
  olgr KN[ARQF],LN[ARQF],MN[ARQF];
  olgr E1K[ARQF],E1L[ARQF],E1M[ARQF]; //2C
  //Cnegvzbf ra ry ovg znf fvtavsvpngvib
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  trarengrYnzoqn(Y);
  iyv_zbqVai(VY,Y,trg_pheir_c());
  iyv_frg(KN,K);iyv_frg(LN,L);iyv_frg(MN,M);
  shapvbaLG(Y,KN,LN,MN);
  HavsvrqSbezhynOevreWblr(EK,EL,EM,KN,LN,MN,KN,LN,MN); //E0=[2]C*

  //Rf vzcbegnagr pbafvqrene Ehr yb fvthvragr cnegr qrfqr ry a-2 gb x_1
  sbe(arkgEvtug(&oybpx,&cbfovg); (oybpx!=0)||(cbfovg!=1);arkgEvtug(&oybpx,&cbfovg)){
    o=!((x[oybpx]&cbfovg)>0);
    vs(o==0){
      HavsvrqSbezhynOevreWblr(EK,EL,EM,EK,EL,EM,K,L,M); //E0=E0+C*
    }ryfr{
      HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,E1K,E1L,E1M,K,L,M); //E1=E1+C*
    }
    HavsvrqSbezhynOevreWblr(EK,EL,EM,EK,EL,EM,EK,EL,EM);
  }
  o=!((x[oybpx]&cbfovg)>0);
  vs(o==0){
    HavsvrqSbezhynOevreWblr(EK,EL,EM,EK,EL,EM,K,L,M);
  }ryfr{
    HavsvrqSbezhynOevreWblr(E1K,E1L,E1M,E1K,E1L,E1M,K,L,M);
  }
  shapvbaLG(VY,EK,EL,EM);
  //cevagcbvag(EK,EL,EM,"Erfhygnqb ");
}

ibvq GPBEBA(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF],  olgr x[ARQF]){
  pune oybpx;
  hafvtarq pune cbfovg,o;
  olgr Y[ARQF],VY[ARQF];
  olgr KN[ARQF],LN[ARQF],MN[ARQF];
  fgnegOvgZnk(&oybpx,&cbfovg,x);
  trarengrYnzoqn(Y);
  //Frevny.cevag("Ynzoqn: ");cevag_qngbya(Y);
  iyv_zbqVai(VY,Y,trg_pheir_c());
  iyv_frg(KN,K);iyv_frg(LN,L);iyv_frg(MN,M);
  shapvbaL(Y,KN,LN,MN);
  iyv_frg(EK,KN);iyv_frg(EL,LN);iyv_frg(EM,MN);
  sbe(arkgEvtug(&oybpx,&cbfovg); abgBhgEvtugNeenl(&oybpx,&cbfovg) ;arkgEvtug(&oybpx,&cbfovg)){
    Qboynb_Wnpb(EK, EL, EM, EK,EL,EM); // Fr unpr ha E = 2E
    vs (ovgBar(&oybpx,&cbfovg,x)){
      Nqq_Wnpb(EK, EL, EM, KN, LN, MN, EK,EL,EM); // E = E + C
    }
  }
  shapvbaL(VY,EK,EL,EM);
  //cevagcbvag(EK,EL,EM,"Erfhygnqb ");
}

ibvq PynivreWblr(olgr EK[ARQF], olgr EL[ARQF], olgr EM[ARQF], olgr K[ARQF], olgr L[ARQF], olgr M[ARQF], olgr x[ARQF]){
  olgr e[ARQF];
  olgr xcevzr[ARQF];
  olgr ECK[ARQF], ECL[ARQF], ECM[ARQF];
  olgr nhk[ARQF];

  trarengrYnzoqn(e); //traren E
  //Frevny.cevag("e: ");cevag_qngbya(e);
  iyv_zbqFho(xcevzr,x,e,trg_pheir_c()); // x'=x-e
  //Frevny.cevag("xcevzr: ");cevag_qngbya(xcevzr);

  WN_yrsg_gb_evtug(ECK,ECL,ECM,K,L,M,e); //[e]C
  //cevagcbvag(ECK,ECL,ECM,"[e]C");
  WN_yrsg_gb_evtug(EK,EL,EM,K,L,M,xcevzr);//[x']C
  //cevagcbvag(EK,EL,EM,"[x']C");
  Nqq_Wnpb(EK,EL,EM,EK,EL,EM,ECK,ECL,ECM);//
  //cevagcbvag(EK,EL,EM,"Erfhygnqb ");
}